
10_SYSTICK_DELAY_CMSIS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001400  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000005c  080015d0  080015d0  000025d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800162c  0800162c  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  0800162c  0800162c  0000262c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001634  08001634  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001634  08001634  00002634  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001638  08001638  00002638  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  0800163c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001698  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001698  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000010fc  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000602  00000000  00000000  00004188  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000178  00000000  00000000  00004790  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000fe  00000000  00000000  00004908  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a9b7  00000000  00000000  00004a06  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002296  00000000  00000000  0001f3bd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00090e9c  00000000  00000000  00021653  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b24ef  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c38  00000000  00000000  000b2534  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000087  00000000  00000000  000b316c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080015b8 	.word	0x080015b8

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	080015b8 	.word	0x080015b8

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__io_putchar>:
#define LED     PIN5

char data;

int __io_putchar(int ch)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
	UART2_Transmit(ch);
 80002b8:	6878      	ldr	r0, [r7, #4]
 80002ba:	f000 f917 	bl	80004ec <UART2_Transmit>
	return ch;
 80002be:	687b      	ldr	r3, [r7, #4]
}
 80002c0:	4618      	mov	r0, r3
 80002c2:	3708      	adds	r7, #8
 80002c4:	46bd      	mov	sp, r7
 80002c6:	bd80      	pop	{r7, pc}

080002c8 <main>:

int main(void)
{
 80002c8:	b580      	push	{r7, lr}
 80002ca:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOAEN;
 80002cc:	4b19      	ldr	r3, [pc, #100]	@ (8000334 <main+0x6c>)
 80002ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002d0:	4a18      	ldr	r2, [pc, #96]	@ (8000334 <main+0x6c>)
 80002d2:	f043 0301 	orr.w	r3, r3, #1
 80002d6:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIOA->MODER |= (1U << 10);
 80002d8:	4b17      	ldr	r3, [pc, #92]	@ (8000338 <main+0x70>)
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	4a16      	ldr	r2, [pc, #88]	@ (8000338 <main+0x70>)
 80002de:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80002e2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(1U << 11);
 80002e4:	4b14      	ldr	r3, [pc, #80]	@ (8000338 <main+0x70>)
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	4a13      	ldr	r2, [pc, #76]	@ (8000338 <main+0x70>)
 80002ea:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80002ee:	6013      	str	r3, [r2, #0]
	UART2_Init();
 80002f0:	f000 f914 	bl	800051c <UART2_Init>
	printf("Hello World!\r\n");
 80002f4:	4811      	ldr	r0, [pc, #68]	@ (800033c <main+0x74>)
 80002f6:	f000 fafb 	bl	80008f0 <puts>

	while(1)
	{
		GPIOA->ODR |= LED;
 80002fa:	4b0f      	ldr	r3, [pc, #60]	@ (8000338 <main+0x70>)
 80002fc:	695b      	ldr	r3, [r3, #20]
 80002fe:	4a0e      	ldr	r2, [pc, #56]	@ (8000338 <main+0x70>)
 8000300:	f043 0320 	orr.w	r3, r3, #32
 8000304:	6153      	str	r3, [r2, #20]
		printf("LED_ON\n\r");
 8000306:	480e      	ldr	r0, [pc, #56]	@ (8000340 <main+0x78>)
 8000308:	f000 fa8a 	bl	8000820 <iprintf>
		systickDelayMs(2000);
 800030c:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 8000310:	f000 f8be 	bl	8000490 <systickDelayMs>
		GPIOA->ODR &= ~(LED);
 8000314:	4b08      	ldr	r3, [pc, #32]	@ (8000338 <main+0x70>)
 8000316:	695b      	ldr	r3, [r3, #20]
 8000318:	4a07      	ldr	r2, [pc, #28]	@ (8000338 <main+0x70>)
 800031a:	f023 0320 	bic.w	r3, r3, #32
 800031e:	6153      	str	r3, [r2, #20]
		printf("LED_OFF\n\r");
 8000320:	4808      	ldr	r0, [pc, #32]	@ (8000344 <main+0x7c>)
 8000322:	f000 fa7d 	bl	8000820 <iprintf>
		systickDelayMs(2000);
 8000326:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 800032a:	f000 f8b1 	bl	8000490 <systickDelayMs>
		GPIOA->ODR |= LED;
 800032e:	bf00      	nop
 8000330:	e7e3      	b.n	80002fa <main+0x32>
 8000332:	bf00      	nop
 8000334:	40023800 	.word	0x40023800
 8000338:	40020000 	.word	0x40020000
 800033c:	080015d0 	.word	0x080015d0
 8000340:	080015e0 	.word	0x080015e0
 8000344:	080015ec 	.word	0x080015ec

08000348 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000348:	b580      	push	{r7, lr}
 800034a:	b086      	sub	sp, #24
 800034c:	af00      	add	r7, sp, #0
 800034e:	60f8      	str	r0, [r7, #12]
 8000350:	60b9      	str	r1, [r7, #8]
 8000352:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000354:	2300      	movs	r3, #0
 8000356:	617b      	str	r3, [r7, #20]
 8000358:	e00a      	b.n	8000370 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800035a:	f3af 8000 	nop.w
 800035e:	4601      	mov	r1, r0
 8000360:	68bb      	ldr	r3, [r7, #8]
 8000362:	1c5a      	adds	r2, r3, #1
 8000364:	60ba      	str	r2, [r7, #8]
 8000366:	b2ca      	uxtb	r2, r1
 8000368:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036a:	697b      	ldr	r3, [r7, #20]
 800036c:	3301      	adds	r3, #1
 800036e:	617b      	str	r3, [r7, #20]
 8000370:	697a      	ldr	r2, [r7, #20]
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	429a      	cmp	r2, r3
 8000376:	dbf0      	blt.n	800035a <_read+0x12>
  }

  return len;
 8000378:	687b      	ldr	r3, [r7, #4]
}
 800037a:	4618      	mov	r0, r3
 800037c:	3718      	adds	r7, #24
 800037e:	46bd      	mov	sp, r7
 8000380:	bd80      	pop	{r7, pc}

08000382 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000382:	b580      	push	{r7, lr}
 8000384:	b086      	sub	sp, #24
 8000386:	af00      	add	r7, sp, #0
 8000388:	60f8      	str	r0, [r7, #12]
 800038a:	60b9      	str	r1, [r7, #8]
 800038c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800038e:	2300      	movs	r3, #0
 8000390:	617b      	str	r3, [r7, #20]
 8000392:	e009      	b.n	80003a8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000394:	68bb      	ldr	r3, [r7, #8]
 8000396:	1c5a      	adds	r2, r3, #1
 8000398:	60ba      	str	r2, [r7, #8]
 800039a:	781b      	ldrb	r3, [r3, #0]
 800039c:	4618      	mov	r0, r3
 800039e:	f7ff ff87 	bl	80002b0 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a2:	697b      	ldr	r3, [r7, #20]
 80003a4:	3301      	adds	r3, #1
 80003a6:	617b      	str	r3, [r7, #20]
 80003a8:	697a      	ldr	r2, [r7, #20]
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	429a      	cmp	r2, r3
 80003ae:	dbf1      	blt.n	8000394 <_write+0x12>
  }
  return len;
 80003b0:	687b      	ldr	r3, [r7, #4]
}
 80003b2:	4618      	mov	r0, r3
 80003b4:	3718      	adds	r7, #24
 80003b6:	46bd      	mov	sp, r7
 80003b8:	bd80      	pop	{r7, pc}

080003ba <_close>:

int _close(int file)
{
 80003ba:	b480      	push	{r7}
 80003bc:	b083      	sub	sp, #12
 80003be:	af00      	add	r7, sp, #0
 80003c0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003c2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003c6:	4618      	mov	r0, r3
 80003c8:	370c      	adds	r7, #12
 80003ca:	46bd      	mov	sp, r7
 80003cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003d0:	4770      	bx	lr

080003d2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003d2:	b480      	push	{r7}
 80003d4:	b083      	sub	sp, #12
 80003d6:	af00      	add	r7, sp, #0
 80003d8:	6078      	str	r0, [r7, #4]
 80003da:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003dc:	683b      	ldr	r3, [r7, #0]
 80003de:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80003e2:	605a      	str	r2, [r3, #4]
  return 0;
 80003e4:	2300      	movs	r3, #0
}
 80003e6:	4618      	mov	r0, r3
 80003e8:	370c      	adds	r7, #12
 80003ea:	46bd      	mov	sp, r7
 80003ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003f0:	4770      	bx	lr

080003f2 <_isatty>:

int _isatty(int file)
{
 80003f2:	b480      	push	{r7}
 80003f4:	b083      	sub	sp, #12
 80003f6:	af00      	add	r7, sp, #0
 80003f8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003fa:	2301      	movs	r3, #1
}
 80003fc:	4618      	mov	r0, r3
 80003fe:	370c      	adds	r7, #12
 8000400:	46bd      	mov	sp, r7
 8000402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000406:	4770      	bx	lr

08000408 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000408:	b480      	push	{r7}
 800040a:	b085      	sub	sp, #20
 800040c:	af00      	add	r7, sp, #0
 800040e:	60f8      	str	r0, [r7, #12]
 8000410:	60b9      	str	r1, [r7, #8]
 8000412:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000414:	2300      	movs	r3, #0
}
 8000416:	4618      	mov	r0, r3
 8000418:	3714      	adds	r7, #20
 800041a:	46bd      	mov	sp, r7
 800041c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000420:	4770      	bx	lr
	...

08000424 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000424:	b580      	push	{r7, lr}
 8000426:	b086      	sub	sp, #24
 8000428:	af00      	add	r7, sp, #0
 800042a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800042c:	4a14      	ldr	r2, [pc, #80]	@ (8000480 <_sbrk+0x5c>)
 800042e:	4b15      	ldr	r3, [pc, #84]	@ (8000484 <_sbrk+0x60>)
 8000430:	1ad3      	subs	r3, r2, r3
 8000432:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000434:	697b      	ldr	r3, [r7, #20]
 8000436:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000438:	4b13      	ldr	r3, [pc, #76]	@ (8000488 <_sbrk+0x64>)
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	2b00      	cmp	r3, #0
 800043e:	d102      	bne.n	8000446 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000440:	4b11      	ldr	r3, [pc, #68]	@ (8000488 <_sbrk+0x64>)
 8000442:	4a12      	ldr	r2, [pc, #72]	@ (800048c <_sbrk+0x68>)
 8000444:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000446:	4b10      	ldr	r3, [pc, #64]	@ (8000488 <_sbrk+0x64>)
 8000448:	681a      	ldr	r2, [r3, #0]
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	4413      	add	r3, r2
 800044e:	693a      	ldr	r2, [r7, #16]
 8000450:	429a      	cmp	r2, r3
 8000452:	d207      	bcs.n	8000464 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000454:	f000 fb7a 	bl	8000b4c <__errno>
 8000458:	4603      	mov	r3, r0
 800045a:	220c      	movs	r2, #12
 800045c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800045e:	f04f 33ff 	mov.w	r3, #4294967295
 8000462:	e009      	b.n	8000478 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000464:	4b08      	ldr	r3, [pc, #32]	@ (8000488 <_sbrk+0x64>)
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800046a:	4b07      	ldr	r3, [pc, #28]	@ (8000488 <_sbrk+0x64>)
 800046c:	681a      	ldr	r2, [r3, #0]
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	4413      	add	r3, r2
 8000472:	4a05      	ldr	r2, [pc, #20]	@ (8000488 <_sbrk+0x64>)
 8000474:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000476:	68fb      	ldr	r3, [r7, #12]
}
 8000478:	4618      	mov	r0, r3
 800047a:	3718      	adds	r7, #24
 800047c:	46bd      	mov	sp, r7
 800047e:	bd80      	pop	{r7, pc}
 8000480:	20020000 	.word	0x20020000
 8000484:	00000400 	.word	0x00000400
 8000488:	20000078 	.word	0x20000078
 800048c:	200001c8 	.word	0x200001c8

08000490 <systickDelayMs>:
#define CTRL_ENABLE            (1U << 0)
#define CTRL_CLKSRC            (1U << 2)
#define CTRL_COUNTFLAG      (1U << 16)

void systickDelayMs(int delay)
{
 8000490:	b480      	push	{r7}
 8000492:	b085      	sub	sp, #20
 8000494:	af00      	add	r7, sp, #0
 8000496:	6078      	str	r0, [r7, #4]
	/*reload with no of clocks per millisecond*/
	SysTick->LOAD = SYSTICK_LOAD_VAL;
 8000498:	4b13      	ldr	r3, [pc, #76]	@ (80004e8 <systickDelayMs+0x58>)
 800049a:	f44f 527a 	mov.w	r2, #16000	@ 0x3e80
 800049e:	605a      	str	r2, [r3, #4]
	/*clear systick current value register*/
	SysTick->VAL = 0;
 80004a0:	4b11      	ldr	r3, [pc, #68]	@ (80004e8 <systickDelayMs+0x58>)
 80004a2:	2200      	movs	r2, #0
 80004a4:	609a      	str	r2, [r3, #8]
	/*enable systick and select internal clock source*/
	SysTick->CTRL |= CTRL_ENABLE | CTRL_CLKSRC;
 80004a6:	4b10      	ldr	r3, [pc, #64]	@ (80004e8 <systickDelayMs+0x58>)
 80004a8:	681b      	ldr	r3, [r3, #0]
 80004aa:	4a0f      	ldr	r2, [pc, #60]	@ (80004e8 <systickDelayMs+0x58>)
 80004ac:	f043 0305 	orr.w	r3, r3, #5
 80004b0:	6013      	str	r3, [r2, #0]

	for(int i = 0; i < delay; i++)
 80004b2:	2300      	movs	r3, #0
 80004b4:	60fb      	str	r3, [r7, #12]
 80004b6:	e009      	b.n	80004cc <systickDelayMs+0x3c>
	{
		/*wait until count flag is set*/
		while(((SysTick->CTRL & CTRL_COUNTFLAG) == 0)){}
 80004b8:	bf00      	nop
 80004ba:	4b0b      	ldr	r3, [pc, #44]	@ (80004e8 <systickDelayMs+0x58>)
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80004c2:	2b00      	cmp	r3, #0
 80004c4:	d0f9      	beq.n	80004ba <systickDelayMs+0x2a>
	for(int i = 0; i < delay; i++)
 80004c6:	68fb      	ldr	r3, [r7, #12]
 80004c8:	3301      	adds	r3, #1
 80004ca:	60fb      	str	r3, [r7, #12]
 80004cc:	68fa      	ldr	r2, [r7, #12]
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	429a      	cmp	r2, r3
 80004d2:	dbf1      	blt.n	80004b8 <systickDelayMs+0x28>
	}
	SysTick->CTRL = 0;
 80004d4:	4b04      	ldr	r3, [pc, #16]	@ (80004e8 <systickDelayMs+0x58>)
 80004d6:	2200      	movs	r2, #0
 80004d8:	601a      	str	r2, [r3, #0]

}
 80004da:	bf00      	nop
 80004dc:	3714      	adds	r7, #20
 80004de:	46bd      	mov	sp, r7
 80004e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e4:	4770      	bx	lr
 80004e6:	bf00      	nop
 80004e8:	e000e010 	.word	0xe000e010

080004ec <UART2_Transmit>:
static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate);
void UART2_Transmit(int ch);


void UART2_Transmit(int ch)
{
 80004ec:	b480      	push	{r7}
 80004ee:	b083      	sub	sp, #12
 80004f0:	af00      	add	r7, sp, #0
 80004f2:	6078      	str	r0, [r7, #4]
	while(!(USART2->SR & SR_TXE)){}
 80004f4:	bf00      	nop
 80004f6:	4b08      	ldr	r3, [pc, #32]	@ (8000518 <UART2_Transmit+0x2c>)
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80004fe:	2b00      	cmp	r3, #0
 8000500:	d0f9      	beq.n	80004f6 <UART2_Transmit+0xa>
	USART2->DR = (ch & 0xFF);
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	4a04      	ldr	r2, [pc, #16]	@ (8000518 <UART2_Transmit+0x2c>)
 8000506:	b2db      	uxtb	r3, r3
 8000508:	6053      	str	r3, [r2, #4]
}
 800050a:	bf00      	nop
 800050c:	370c      	adds	r7, #12
 800050e:	46bd      	mov	sp, r7
 8000510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000514:	4770      	bx	lr
 8000516:	bf00      	nop
 8000518:	40004400 	.word	0x40004400

0800051c <UART2_Init>:

void UART2_Init(void)
{
 800051c:	b580      	push	{r7, lr}
 800051e:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOAEN;    //Enabling AHB1 clock for PORT A, because UART 2 uses PA2 - TX and PA3 - RX
 8000520:	4b32      	ldr	r3, [pc, #200]	@ (80005ec <UART2_Init+0xd0>)
 8000522:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000524:	4a31      	ldr	r2, [pc, #196]	@ (80005ec <UART2_Init+0xd0>)
 8000526:	f043 0301 	orr.w	r3, r3, #1
 800052a:	6313      	str	r3, [r2, #48]	@ 0x30

	/* setting PA2 - TX as alternate function mode by using set 1 bit 4 and 5 as configuration 1:0*/
	GPIOA->MODER &= ~(1U << 4);
 800052c:	4b30      	ldr	r3, [pc, #192]	@ (80005f0 <UART2_Init+0xd4>)
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	4a2f      	ldr	r2, [pc, #188]	@ (80005f0 <UART2_Init+0xd4>)
 8000532:	f023 0310 	bic.w	r3, r3, #16
 8000536:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U << 5);
 8000538:	4b2d      	ldr	r3, [pc, #180]	@ (80005f0 <UART2_Init+0xd4>)
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	4a2c      	ldr	r2, [pc, #176]	@ (80005f0 <UART2_Init+0xd4>)
 800053e:	f043 0320 	orr.w	r3, r3, #32
 8000542:	6013      	str	r3, [r2, #0]

	/* setting PA3 - RX as alternate function mode by using set as configuration 1:0*/
	GPIOA->MODER &= ~(1U << 6);
 8000544:	4b2a      	ldr	r3, [pc, #168]	@ (80005f0 <UART2_Init+0xd4>)
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	4a29      	ldr	r2, [pc, #164]	@ (80005f0 <UART2_Init+0xd4>)
 800054a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800054e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U << 7);
 8000550:	4b27      	ldr	r3, [pc, #156]	@ (80005f0 <UART2_Init+0xd4>)
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	4a26      	ldr	r2, [pc, #152]	@ (80005f0 <UART2_Init+0xd4>)
 8000556:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800055a:	6013      	str	r3, [r2, #0]
	 * PA2 is a AF7 in alternate function mapping register.
	 * PA2 comes under alternate function low register because first 8 pins on any port it comes under AFRL, next 8 pins comes under the AFRH register
	 * for enabling AF7 we need to set bit formation as 0111 to the particular alternate function pin register.
	 * Alternate function register, each pin have 4 bits.
	 */
	GPIOA->AFR[0] |= (1U << 8);   //1
 800055c:	4b24      	ldr	r3, [pc, #144]	@ (80005f0 <UART2_Init+0xd4>)
 800055e:	6a1b      	ldr	r3, [r3, #32]
 8000560:	4a23      	ldr	r2, [pc, #140]	@ (80005f0 <UART2_Init+0xd4>)
 8000562:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000566:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U << 9);   //1
 8000568:	4b21      	ldr	r3, [pc, #132]	@ (80005f0 <UART2_Init+0xd4>)
 800056a:	6a1b      	ldr	r3, [r3, #32]
 800056c:	4a20      	ldr	r2, [pc, #128]	@ (80005f0 <UART2_Init+0xd4>)
 800056e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000572:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U << 10);  //1
 8000574:	4b1e      	ldr	r3, [pc, #120]	@ (80005f0 <UART2_Init+0xd4>)
 8000576:	6a1b      	ldr	r3, [r3, #32]
 8000578:	4a1d      	ldr	r2, [pc, #116]	@ (80005f0 <UART2_Init+0xd4>)
 800057a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800057e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U << 11);  //0
 8000580:	4b1b      	ldr	r3, [pc, #108]	@ (80005f0 <UART2_Init+0xd4>)
 8000582:	6a1b      	ldr	r3, [r3, #32]
 8000584:	4a1a      	ldr	r2, [pc, #104]	@ (80005f0 <UART2_Init+0xd4>)
 8000586:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800058a:	6213      	str	r3, [r2, #32]

	/* Setting PA3 alternate function type*/
	GPIOA->AFR[0] |= (1U << 12);   //1
 800058c:	4b18      	ldr	r3, [pc, #96]	@ (80005f0 <UART2_Init+0xd4>)
 800058e:	6a1b      	ldr	r3, [r3, #32]
 8000590:	4a17      	ldr	r2, [pc, #92]	@ (80005f0 <UART2_Init+0xd4>)
 8000592:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000596:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U << 13);   //1
 8000598:	4b15      	ldr	r3, [pc, #84]	@ (80005f0 <UART2_Init+0xd4>)
 800059a:	6a1b      	ldr	r3, [r3, #32]
 800059c:	4a14      	ldr	r2, [pc, #80]	@ (80005f0 <UART2_Init+0xd4>)
 800059e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80005a2:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U << 14);  //1
 80005a4:	4b12      	ldr	r3, [pc, #72]	@ (80005f0 <UART2_Init+0xd4>)
 80005a6:	6a1b      	ldr	r3, [r3, #32]
 80005a8:	4a11      	ldr	r2, [pc, #68]	@ (80005f0 <UART2_Init+0xd4>)
 80005aa:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80005ae:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U << 15);  //0
 80005b0:	4b0f      	ldr	r3, [pc, #60]	@ (80005f0 <UART2_Init+0xd4>)
 80005b2:	6a1b      	ldr	r3, [r3, #32]
 80005b4:	4a0e      	ldr	r2, [pc, #56]	@ (80005f0 <UART2_Init+0xd4>)
 80005b6:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80005ba:	6213      	str	r3, [r2, #32]

	RCC->APB1ENR |= UART2EN;    //Enabling APB1 clock for UART2
 80005bc:	4b0b      	ldr	r3, [pc, #44]	@ (80005ec <UART2_Init+0xd0>)
 80005be:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80005c0:	4a0a      	ldr	r2, [pc, #40]	@ (80005ec <UART2_Init+0xd0>)
 80005c2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80005c6:	6413      	str	r3, [r2, #64]	@ 0x40

	/*Configure baud rate*/
	uart_set_baudrate(USART2, APB1_CLK, UART_BAUDRATE);
 80005c8:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80005cc:	4909      	ldr	r1, [pc, #36]	@ (80005f4 <UART2_Init+0xd8>)
 80005ce:	480a      	ldr	r0, [pc, #40]	@ (80005f8 <UART2_Init+0xdc>)
 80005d0:	f000 f814 	bl	80005fc <uart_set_baudrate>

	/*configure the transfer direction like rx or tx*/
	USART2->CR1 = (CR1_TE | CR1_RE);
 80005d4:	4b08      	ldr	r3, [pc, #32]	@ (80005f8 <UART2_Init+0xdc>)
 80005d6:	220c      	movs	r2, #12
 80005d8:	60da      	str	r2, [r3, #12]

	/*enabling the uart module*/
	USART2->CR1 |= CR1_UE;
 80005da:	4b07      	ldr	r3, [pc, #28]	@ (80005f8 <UART2_Init+0xdc>)
 80005dc:	68db      	ldr	r3, [r3, #12]
 80005de:	4a06      	ldr	r2, [pc, #24]	@ (80005f8 <UART2_Init+0xdc>)
 80005e0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80005e4:	60d3      	str	r3, [r2, #12]
}
 80005e6:	bf00      	nop
 80005e8:	bd80      	pop	{r7, pc}
 80005ea:	bf00      	nop
 80005ec:	40023800 	.word	0x40023800
 80005f0:	40020000 	.word	0x40020000
 80005f4:	00f42400 	.word	0x00f42400
 80005f8:	40004400 	.word	0x40004400

080005fc <uart_set_baudrate>:
	while(!(USART2->SR & SR_RXNE)){}
	return USART2->DR;
}

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate)
{
 80005fc:	b580      	push	{r7, lr}
 80005fe:	b084      	sub	sp, #16
 8000600:	af00      	add	r7, sp, #0
 8000602:	60f8      	str	r0, [r7, #12]
 8000604:	60b9      	str	r1, [r7, #8]
 8000606:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd(PeriphClk,BaudRate);
 8000608:	6879      	ldr	r1, [r7, #4]
 800060a:	68b8      	ldr	r0, [r7, #8]
 800060c:	f000 f808 	bl	8000620 <compute_uart_bd>
 8000610:	4603      	mov	r3, r0
 8000612:	461a      	mov	r2, r3
 8000614:	68fb      	ldr	r3, [r7, #12]
 8000616:	609a      	str	r2, [r3, #8]
}
 8000618:	bf00      	nop
 800061a:	3710      	adds	r7, #16
 800061c:	46bd      	mov	sp, r7
 800061e:	bd80      	pop	{r7, pc}

08000620 <compute_uart_bd>:


static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 8000620:	b480      	push	{r7}
 8000622:	b083      	sub	sp, #12
 8000624:	af00      	add	r7, sp, #0
 8000626:	6078      	str	r0, [r7, #4]
 8000628:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 800062a:	683b      	ldr	r3, [r7, #0]
 800062c:	085a      	lsrs	r2, r3, #1
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	441a      	add	r2, r3
 8000632:	683b      	ldr	r3, [r7, #0]
 8000634:	fbb2 f3f3 	udiv	r3, r2, r3
 8000638:	b29b      	uxth	r3, r3
}
 800063a:	4618      	mov	r0, r3
 800063c:	370c      	adds	r7, #12
 800063e:	46bd      	mov	sp, r7
 8000640:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000644:	4770      	bx	lr
	...

08000648 <Reset_Handler>:
 8000648:	480d      	ldr	r0, [pc, #52]	@ (8000680 <LoopForever+0x2>)
 800064a:	4685      	mov	sp, r0
 800064c:	f3af 8000 	nop.w
 8000650:	480c      	ldr	r0, [pc, #48]	@ (8000684 <LoopForever+0x6>)
 8000652:	490d      	ldr	r1, [pc, #52]	@ (8000688 <LoopForever+0xa>)
 8000654:	4a0d      	ldr	r2, [pc, #52]	@ (800068c <LoopForever+0xe>)
 8000656:	2300      	movs	r3, #0
 8000658:	e002      	b.n	8000660 <LoopCopyDataInit>

0800065a <CopyDataInit>:
 800065a:	58d4      	ldr	r4, [r2, r3]
 800065c:	50c4      	str	r4, [r0, r3]
 800065e:	3304      	adds	r3, #4

08000660 <LoopCopyDataInit>:
 8000660:	18c4      	adds	r4, r0, r3
 8000662:	428c      	cmp	r4, r1
 8000664:	d3f9      	bcc.n	800065a <CopyDataInit>
 8000666:	4a0a      	ldr	r2, [pc, #40]	@ (8000690 <LoopForever+0x12>)
 8000668:	4c0a      	ldr	r4, [pc, #40]	@ (8000694 <LoopForever+0x16>)
 800066a:	2300      	movs	r3, #0
 800066c:	e001      	b.n	8000672 <LoopFillZerobss>

0800066e <FillZerobss>:
 800066e:	6013      	str	r3, [r2, #0]
 8000670:	3204      	adds	r2, #4

08000672 <LoopFillZerobss>:
 8000672:	42a2      	cmp	r2, r4
 8000674:	d3fb      	bcc.n	800066e <FillZerobss>
 8000676:	f000 fa6f 	bl	8000b58 <__libc_init_array>
 800067a:	f7ff fe25 	bl	80002c8 <main>

0800067e <LoopForever>:
 800067e:	e7fe      	b.n	800067e <LoopForever>
 8000680:	20020000 	.word	0x20020000
 8000684:	20000000 	.word	0x20000000
 8000688:	2000005c 	.word	0x2000005c
 800068c:	0800163c 	.word	0x0800163c
 8000690:	2000005c 	.word	0x2000005c
 8000694:	200001c8 	.word	0x200001c8

08000698 <ADC_IRQHandler>:
 8000698:	e7fe      	b.n	8000698 <ADC_IRQHandler>
	...

0800069c <std>:
 800069c:	2300      	movs	r3, #0
 800069e:	b510      	push	{r4, lr}
 80006a0:	4604      	mov	r4, r0
 80006a2:	e9c0 3300 	strd	r3, r3, [r0]
 80006a6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80006aa:	6083      	str	r3, [r0, #8]
 80006ac:	8181      	strh	r1, [r0, #12]
 80006ae:	6643      	str	r3, [r0, #100]	@ 0x64
 80006b0:	81c2      	strh	r2, [r0, #14]
 80006b2:	6183      	str	r3, [r0, #24]
 80006b4:	4619      	mov	r1, r3
 80006b6:	2208      	movs	r2, #8
 80006b8:	305c      	adds	r0, #92	@ 0x5c
 80006ba:	f000 f9f9 	bl	8000ab0 <memset>
 80006be:	4b0d      	ldr	r3, [pc, #52]	@ (80006f4 <std+0x58>)
 80006c0:	6263      	str	r3, [r4, #36]	@ 0x24
 80006c2:	4b0d      	ldr	r3, [pc, #52]	@ (80006f8 <std+0x5c>)
 80006c4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80006c6:	4b0d      	ldr	r3, [pc, #52]	@ (80006fc <std+0x60>)
 80006c8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80006ca:	4b0d      	ldr	r3, [pc, #52]	@ (8000700 <std+0x64>)
 80006cc:	6323      	str	r3, [r4, #48]	@ 0x30
 80006ce:	4b0d      	ldr	r3, [pc, #52]	@ (8000704 <std+0x68>)
 80006d0:	6224      	str	r4, [r4, #32]
 80006d2:	429c      	cmp	r4, r3
 80006d4:	d006      	beq.n	80006e4 <std+0x48>
 80006d6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80006da:	4294      	cmp	r4, r2
 80006dc:	d002      	beq.n	80006e4 <std+0x48>
 80006de:	33d0      	adds	r3, #208	@ 0xd0
 80006e0:	429c      	cmp	r4, r3
 80006e2:	d105      	bne.n	80006f0 <std+0x54>
 80006e4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80006e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006ec:	f000 ba58 	b.w	8000ba0 <__retarget_lock_init_recursive>
 80006f0:	bd10      	pop	{r4, pc}
 80006f2:	bf00      	nop
 80006f4:	08000901 	.word	0x08000901
 80006f8:	08000923 	.word	0x08000923
 80006fc:	0800095b 	.word	0x0800095b
 8000700:	0800097f 	.word	0x0800097f
 8000704:	2000007c 	.word	0x2000007c

08000708 <stdio_exit_handler>:
 8000708:	4a02      	ldr	r2, [pc, #8]	@ (8000714 <stdio_exit_handler+0xc>)
 800070a:	4903      	ldr	r1, [pc, #12]	@ (8000718 <stdio_exit_handler+0x10>)
 800070c:	4803      	ldr	r0, [pc, #12]	@ (800071c <stdio_exit_handler+0x14>)
 800070e:	f000 b869 	b.w	80007e4 <_fwalk_sglue>
 8000712:	bf00      	nop
 8000714:	20000000 	.word	0x20000000
 8000718:	08001441 	.word	0x08001441
 800071c:	20000010 	.word	0x20000010

08000720 <cleanup_stdio>:
 8000720:	6841      	ldr	r1, [r0, #4]
 8000722:	4b0c      	ldr	r3, [pc, #48]	@ (8000754 <cleanup_stdio+0x34>)
 8000724:	4299      	cmp	r1, r3
 8000726:	b510      	push	{r4, lr}
 8000728:	4604      	mov	r4, r0
 800072a:	d001      	beq.n	8000730 <cleanup_stdio+0x10>
 800072c:	f000 fe88 	bl	8001440 <_fflush_r>
 8000730:	68a1      	ldr	r1, [r4, #8]
 8000732:	4b09      	ldr	r3, [pc, #36]	@ (8000758 <cleanup_stdio+0x38>)
 8000734:	4299      	cmp	r1, r3
 8000736:	d002      	beq.n	800073e <cleanup_stdio+0x1e>
 8000738:	4620      	mov	r0, r4
 800073a:	f000 fe81 	bl	8001440 <_fflush_r>
 800073e:	68e1      	ldr	r1, [r4, #12]
 8000740:	4b06      	ldr	r3, [pc, #24]	@ (800075c <cleanup_stdio+0x3c>)
 8000742:	4299      	cmp	r1, r3
 8000744:	d004      	beq.n	8000750 <cleanup_stdio+0x30>
 8000746:	4620      	mov	r0, r4
 8000748:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800074c:	f000 be78 	b.w	8001440 <_fflush_r>
 8000750:	bd10      	pop	{r4, pc}
 8000752:	bf00      	nop
 8000754:	2000007c 	.word	0x2000007c
 8000758:	200000e4 	.word	0x200000e4
 800075c:	2000014c 	.word	0x2000014c

08000760 <global_stdio_init.part.0>:
 8000760:	b510      	push	{r4, lr}
 8000762:	4b0b      	ldr	r3, [pc, #44]	@ (8000790 <global_stdio_init.part.0+0x30>)
 8000764:	4c0b      	ldr	r4, [pc, #44]	@ (8000794 <global_stdio_init.part.0+0x34>)
 8000766:	4a0c      	ldr	r2, [pc, #48]	@ (8000798 <global_stdio_init.part.0+0x38>)
 8000768:	601a      	str	r2, [r3, #0]
 800076a:	4620      	mov	r0, r4
 800076c:	2200      	movs	r2, #0
 800076e:	2104      	movs	r1, #4
 8000770:	f7ff ff94 	bl	800069c <std>
 8000774:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000778:	2201      	movs	r2, #1
 800077a:	2109      	movs	r1, #9
 800077c:	f7ff ff8e 	bl	800069c <std>
 8000780:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000784:	2202      	movs	r2, #2
 8000786:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800078a:	2112      	movs	r1, #18
 800078c:	f7ff bf86 	b.w	800069c <std>
 8000790:	200001b4 	.word	0x200001b4
 8000794:	2000007c 	.word	0x2000007c
 8000798:	08000709 	.word	0x08000709

0800079c <__sfp_lock_acquire>:
 800079c:	4801      	ldr	r0, [pc, #4]	@ (80007a4 <__sfp_lock_acquire+0x8>)
 800079e:	f000 ba00 	b.w	8000ba2 <__retarget_lock_acquire_recursive>
 80007a2:	bf00      	nop
 80007a4:	200001bd 	.word	0x200001bd

080007a8 <__sfp_lock_release>:
 80007a8:	4801      	ldr	r0, [pc, #4]	@ (80007b0 <__sfp_lock_release+0x8>)
 80007aa:	f000 b9fb 	b.w	8000ba4 <__retarget_lock_release_recursive>
 80007ae:	bf00      	nop
 80007b0:	200001bd 	.word	0x200001bd

080007b4 <__sinit>:
 80007b4:	b510      	push	{r4, lr}
 80007b6:	4604      	mov	r4, r0
 80007b8:	f7ff fff0 	bl	800079c <__sfp_lock_acquire>
 80007bc:	6a23      	ldr	r3, [r4, #32]
 80007be:	b11b      	cbz	r3, 80007c8 <__sinit+0x14>
 80007c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007c4:	f7ff bff0 	b.w	80007a8 <__sfp_lock_release>
 80007c8:	4b04      	ldr	r3, [pc, #16]	@ (80007dc <__sinit+0x28>)
 80007ca:	6223      	str	r3, [r4, #32]
 80007cc:	4b04      	ldr	r3, [pc, #16]	@ (80007e0 <__sinit+0x2c>)
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	2b00      	cmp	r3, #0
 80007d2:	d1f5      	bne.n	80007c0 <__sinit+0xc>
 80007d4:	f7ff ffc4 	bl	8000760 <global_stdio_init.part.0>
 80007d8:	e7f2      	b.n	80007c0 <__sinit+0xc>
 80007da:	bf00      	nop
 80007dc:	08000721 	.word	0x08000721
 80007e0:	200001b4 	.word	0x200001b4

080007e4 <_fwalk_sglue>:
 80007e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007e8:	4607      	mov	r7, r0
 80007ea:	4688      	mov	r8, r1
 80007ec:	4614      	mov	r4, r2
 80007ee:	2600      	movs	r6, #0
 80007f0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80007f4:	f1b9 0901 	subs.w	r9, r9, #1
 80007f8:	d505      	bpl.n	8000806 <_fwalk_sglue+0x22>
 80007fa:	6824      	ldr	r4, [r4, #0]
 80007fc:	2c00      	cmp	r4, #0
 80007fe:	d1f7      	bne.n	80007f0 <_fwalk_sglue+0xc>
 8000800:	4630      	mov	r0, r6
 8000802:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000806:	89ab      	ldrh	r3, [r5, #12]
 8000808:	2b01      	cmp	r3, #1
 800080a:	d907      	bls.n	800081c <_fwalk_sglue+0x38>
 800080c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000810:	3301      	adds	r3, #1
 8000812:	d003      	beq.n	800081c <_fwalk_sglue+0x38>
 8000814:	4629      	mov	r1, r5
 8000816:	4638      	mov	r0, r7
 8000818:	47c0      	blx	r8
 800081a:	4306      	orrs	r6, r0
 800081c:	3568      	adds	r5, #104	@ 0x68
 800081e:	e7e9      	b.n	80007f4 <_fwalk_sglue+0x10>

08000820 <iprintf>:
 8000820:	b40f      	push	{r0, r1, r2, r3}
 8000822:	b507      	push	{r0, r1, r2, lr}
 8000824:	4906      	ldr	r1, [pc, #24]	@ (8000840 <iprintf+0x20>)
 8000826:	ab04      	add	r3, sp, #16
 8000828:	6808      	ldr	r0, [r1, #0]
 800082a:	f853 2b04 	ldr.w	r2, [r3], #4
 800082e:	6881      	ldr	r1, [r0, #8]
 8000830:	9301      	str	r3, [sp, #4]
 8000832:	f000 fadb 	bl	8000dec <_vfiprintf_r>
 8000836:	b003      	add	sp, #12
 8000838:	f85d eb04 	ldr.w	lr, [sp], #4
 800083c:	b004      	add	sp, #16
 800083e:	4770      	bx	lr
 8000840:	2000000c 	.word	0x2000000c

08000844 <_puts_r>:
 8000844:	6a03      	ldr	r3, [r0, #32]
 8000846:	b570      	push	{r4, r5, r6, lr}
 8000848:	6884      	ldr	r4, [r0, #8]
 800084a:	4605      	mov	r5, r0
 800084c:	460e      	mov	r6, r1
 800084e:	b90b      	cbnz	r3, 8000854 <_puts_r+0x10>
 8000850:	f7ff ffb0 	bl	80007b4 <__sinit>
 8000854:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000856:	07db      	lsls	r3, r3, #31
 8000858:	d405      	bmi.n	8000866 <_puts_r+0x22>
 800085a:	89a3      	ldrh	r3, [r4, #12]
 800085c:	0598      	lsls	r0, r3, #22
 800085e:	d402      	bmi.n	8000866 <_puts_r+0x22>
 8000860:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000862:	f000 f99e 	bl	8000ba2 <__retarget_lock_acquire_recursive>
 8000866:	89a3      	ldrh	r3, [r4, #12]
 8000868:	0719      	lsls	r1, r3, #28
 800086a:	d502      	bpl.n	8000872 <_puts_r+0x2e>
 800086c:	6923      	ldr	r3, [r4, #16]
 800086e:	2b00      	cmp	r3, #0
 8000870:	d135      	bne.n	80008de <_puts_r+0x9a>
 8000872:	4621      	mov	r1, r4
 8000874:	4628      	mov	r0, r5
 8000876:	f000 f8c5 	bl	8000a04 <__swsetup_r>
 800087a:	b380      	cbz	r0, 80008de <_puts_r+0x9a>
 800087c:	f04f 35ff 	mov.w	r5, #4294967295
 8000880:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000882:	07da      	lsls	r2, r3, #31
 8000884:	d405      	bmi.n	8000892 <_puts_r+0x4e>
 8000886:	89a3      	ldrh	r3, [r4, #12]
 8000888:	059b      	lsls	r3, r3, #22
 800088a:	d402      	bmi.n	8000892 <_puts_r+0x4e>
 800088c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800088e:	f000 f989 	bl	8000ba4 <__retarget_lock_release_recursive>
 8000892:	4628      	mov	r0, r5
 8000894:	bd70      	pop	{r4, r5, r6, pc}
 8000896:	2b00      	cmp	r3, #0
 8000898:	da04      	bge.n	80008a4 <_puts_r+0x60>
 800089a:	69a2      	ldr	r2, [r4, #24]
 800089c:	429a      	cmp	r2, r3
 800089e:	dc17      	bgt.n	80008d0 <_puts_r+0x8c>
 80008a0:	290a      	cmp	r1, #10
 80008a2:	d015      	beq.n	80008d0 <_puts_r+0x8c>
 80008a4:	6823      	ldr	r3, [r4, #0]
 80008a6:	1c5a      	adds	r2, r3, #1
 80008a8:	6022      	str	r2, [r4, #0]
 80008aa:	7019      	strb	r1, [r3, #0]
 80008ac:	68a3      	ldr	r3, [r4, #8]
 80008ae:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80008b2:	3b01      	subs	r3, #1
 80008b4:	60a3      	str	r3, [r4, #8]
 80008b6:	2900      	cmp	r1, #0
 80008b8:	d1ed      	bne.n	8000896 <_puts_r+0x52>
 80008ba:	2b00      	cmp	r3, #0
 80008bc:	da11      	bge.n	80008e2 <_puts_r+0x9e>
 80008be:	4622      	mov	r2, r4
 80008c0:	210a      	movs	r1, #10
 80008c2:	4628      	mov	r0, r5
 80008c4:	f000 f85f 	bl	8000986 <__swbuf_r>
 80008c8:	3001      	adds	r0, #1
 80008ca:	d0d7      	beq.n	800087c <_puts_r+0x38>
 80008cc:	250a      	movs	r5, #10
 80008ce:	e7d7      	b.n	8000880 <_puts_r+0x3c>
 80008d0:	4622      	mov	r2, r4
 80008d2:	4628      	mov	r0, r5
 80008d4:	f000 f857 	bl	8000986 <__swbuf_r>
 80008d8:	3001      	adds	r0, #1
 80008da:	d1e7      	bne.n	80008ac <_puts_r+0x68>
 80008dc:	e7ce      	b.n	800087c <_puts_r+0x38>
 80008de:	3e01      	subs	r6, #1
 80008e0:	e7e4      	b.n	80008ac <_puts_r+0x68>
 80008e2:	6823      	ldr	r3, [r4, #0]
 80008e4:	1c5a      	adds	r2, r3, #1
 80008e6:	6022      	str	r2, [r4, #0]
 80008e8:	220a      	movs	r2, #10
 80008ea:	701a      	strb	r2, [r3, #0]
 80008ec:	e7ee      	b.n	80008cc <_puts_r+0x88>
	...

080008f0 <puts>:
 80008f0:	4b02      	ldr	r3, [pc, #8]	@ (80008fc <puts+0xc>)
 80008f2:	4601      	mov	r1, r0
 80008f4:	6818      	ldr	r0, [r3, #0]
 80008f6:	f7ff bfa5 	b.w	8000844 <_puts_r>
 80008fa:	bf00      	nop
 80008fc:	2000000c 	.word	0x2000000c

08000900 <__sread>:
 8000900:	b510      	push	{r4, lr}
 8000902:	460c      	mov	r4, r1
 8000904:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000908:	f000 f8fc 	bl	8000b04 <_read_r>
 800090c:	2800      	cmp	r0, #0
 800090e:	bfab      	itete	ge
 8000910:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000912:	89a3      	ldrhlt	r3, [r4, #12]
 8000914:	181b      	addge	r3, r3, r0
 8000916:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800091a:	bfac      	ite	ge
 800091c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800091e:	81a3      	strhlt	r3, [r4, #12]
 8000920:	bd10      	pop	{r4, pc}

08000922 <__swrite>:
 8000922:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000926:	461f      	mov	r7, r3
 8000928:	898b      	ldrh	r3, [r1, #12]
 800092a:	05db      	lsls	r3, r3, #23
 800092c:	4605      	mov	r5, r0
 800092e:	460c      	mov	r4, r1
 8000930:	4616      	mov	r6, r2
 8000932:	d505      	bpl.n	8000940 <__swrite+0x1e>
 8000934:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000938:	2302      	movs	r3, #2
 800093a:	2200      	movs	r2, #0
 800093c:	f000 f8d0 	bl	8000ae0 <_lseek_r>
 8000940:	89a3      	ldrh	r3, [r4, #12]
 8000942:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000946:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800094a:	81a3      	strh	r3, [r4, #12]
 800094c:	4632      	mov	r2, r6
 800094e:	463b      	mov	r3, r7
 8000950:	4628      	mov	r0, r5
 8000952:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000956:	f000 b8e7 	b.w	8000b28 <_write_r>

0800095a <__sseek>:
 800095a:	b510      	push	{r4, lr}
 800095c:	460c      	mov	r4, r1
 800095e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000962:	f000 f8bd 	bl	8000ae0 <_lseek_r>
 8000966:	1c43      	adds	r3, r0, #1
 8000968:	89a3      	ldrh	r3, [r4, #12]
 800096a:	bf15      	itete	ne
 800096c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800096e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000972:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000976:	81a3      	strheq	r3, [r4, #12]
 8000978:	bf18      	it	ne
 800097a:	81a3      	strhne	r3, [r4, #12]
 800097c:	bd10      	pop	{r4, pc}

0800097e <__sclose>:
 800097e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000982:	f000 b89d 	b.w	8000ac0 <_close_r>

08000986 <__swbuf_r>:
 8000986:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000988:	460e      	mov	r6, r1
 800098a:	4614      	mov	r4, r2
 800098c:	4605      	mov	r5, r0
 800098e:	b118      	cbz	r0, 8000998 <__swbuf_r+0x12>
 8000990:	6a03      	ldr	r3, [r0, #32]
 8000992:	b90b      	cbnz	r3, 8000998 <__swbuf_r+0x12>
 8000994:	f7ff ff0e 	bl	80007b4 <__sinit>
 8000998:	69a3      	ldr	r3, [r4, #24]
 800099a:	60a3      	str	r3, [r4, #8]
 800099c:	89a3      	ldrh	r3, [r4, #12]
 800099e:	071a      	lsls	r2, r3, #28
 80009a0:	d501      	bpl.n	80009a6 <__swbuf_r+0x20>
 80009a2:	6923      	ldr	r3, [r4, #16]
 80009a4:	b943      	cbnz	r3, 80009b8 <__swbuf_r+0x32>
 80009a6:	4621      	mov	r1, r4
 80009a8:	4628      	mov	r0, r5
 80009aa:	f000 f82b 	bl	8000a04 <__swsetup_r>
 80009ae:	b118      	cbz	r0, 80009b8 <__swbuf_r+0x32>
 80009b0:	f04f 37ff 	mov.w	r7, #4294967295
 80009b4:	4638      	mov	r0, r7
 80009b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009b8:	6823      	ldr	r3, [r4, #0]
 80009ba:	6922      	ldr	r2, [r4, #16]
 80009bc:	1a98      	subs	r0, r3, r2
 80009be:	6963      	ldr	r3, [r4, #20]
 80009c0:	b2f6      	uxtb	r6, r6
 80009c2:	4283      	cmp	r3, r0
 80009c4:	4637      	mov	r7, r6
 80009c6:	dc05      	bgt.n	80009d4 <__swbuf_r+0x4e>
 80009c8:	4621      	mov	r1, r4
 80009ca:	4628      	mov	r0, r5
 80009cc:	f000 fd38 	bl	8001440 <_fflush_r>
 80009d0:	2800      	cmp	r0, #0
 80009d2:	d1ed      	bne.n	80009b0 <__swbuf_r+0x2a>
 80009d4:	68a3      	ldr	r3, [r4, #8]
 80009d6:	3b01      	subs	r3, #1
 80009d8:	60a3      	str	r3, [r4, #8]
 80009da:	6823      	ldr	r3, [r4, #0]
 80009dc:	1c5a      	adds	r2, r3, #1
 80009de:	6022      	str	r2, [r4, #0]
 80009e0:	701e      	strb	r6, [r3, #0]
 80009e2:	6962      	ldr	r2, [r4, #20]
 80009e4:	1c43      	adds	r3, r0, #1
 80009e6:	429a      	cmp	r2, r3
 80009e8:	d004      	beq.n	80009f4 <__swbuf_r+0x6e>
 80009ea:	89a3      	ldrh	r3, [r4, #12]
 80009ec:	07db      	lsls	r3, r3, #31
 80009ee:	d5e1      	bpl.n	80009b4 <__swbuf_r+0x2e>
 80009f0:	2e0a      	cmp	r6, #10
 80009f2:	d1df      	bne.n	80009b4 <__swbuf_r+0x2e>
 80009f4:	4621      	mov	r1, r4
 80009f6:	4628      	mov	r0, r5
 80009f8:	f000 fd22 	bl	8001440 <_fflush_r>
 80009fc:	2800      	cmp	r0, #0
 80009fe:	d0d9      	beq.n	80009b4 <__swbuf_r+0x2e>
 8000a00:	e7d6      	b.n	80009b0 <__swbuf_r+0x2a>
	...

08000a04 <__swsetup_r>:
 8000a04:	b538      	push	{r3, r4, r5, lr}
 8000a06:	4b29      	ldr	r3, [pc, #164]	@ (8000aac <__swsetup_r+0xa8>)
 8000a08:	4605      	mov	r5, r0
 8000a0a:	6818      	ldr	r0, [r3, #0]
 8000a0c:	460c      	mov	r4, r1
 8000a0e:	b118      	cbz	r0, 8000a18 <__swsetup_r+0x14>
 8000a10:	6a03      	ldr	r3, [r0, #32]
 8000a12:	b90b      	cbnz	r3, 8000a18 <__swsetup_r+0x14>
 8000a14:	f7ff fece 	bl	80007b4 <__sinit>
 8000a18:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a1c:	0719      	lsls	r1, r3, #28
 8000a1e:	d422      	bmi.n	8000a66 <__swsetup_r+0x62>
 8000a20:	06da      	lsls	r2, r3, #27
 8000a22:	d407      	bmi.n	8000a34 <__swsetup_r+0x30>
 8000a24:	2209      	movs	r2, #9
 8000a26:	602a      	str	r2, [r5, #0]
 8000a28:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000a2c:	81a3      	strh	r3, [r4, #12]
 8000a2e:	f04f 30ff 	mov.w	r0, #4294967295
 8000a32:	e033      	b.n	8000a9c <__swsetup_r+0x98>
 8000a34:	0758      	lsls	r0, r3, #29
 8000a36:	d512      	bpl.n	8000a5e <__swsetup_r+0x5a>
 8000a38:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000a3a:	b141      	cbz	r1, 8000a4e <__swsetup_r+0x4a>
 8000a3c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000a40:	4299      	cmp	r1, r3
 8000a42:	d002      	beq.n	8000a4a <__swsetup_r+0x46>
 8000a44:	4628      	mov	r0, r5
 8000a46:	f000 f8af 	bl	8000ba8 <_free_r>
 8000a4a:	2300      	movs	r3, #0
 8000a4c:	6363      	str	r3, [r4, #52]	@ 0x34
 8000a4e:	89a3      	ldrh	r3, [r4, #12]
 8000a50:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000a54:	81a3      	strh	r3, [r4, #12]
 8000a56:	2300      	movs	r3, #0
 8000a58:	6063      	str	r3, [r4, #4]
 8000a5a:	6923      	ldr	r3, [r4, #16]
 8000a5c:	6023      	str	r3, [r4, #0]
 8000a5e:	89a3      	ldrh	r3, [r4, #12]
 8000a60:	f043 0308 	orr.w	r3, r3, #8
 8000a64:	81a3      	strh	r3, [r4, #12]
 8000a66:	6923      	ldr	r3, [r4, #16]
 8000a68:	b94b      	cbnz	r3, 8000a7e <__swsetup_r+0x7a>
 8000a6a:	89a3      	ldrh	r3, [r4, #12]
 8000a6c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000a70:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000a74:	d003      	beq.n	8000a7e <__swsetup_r+0x7a>
 8000a76:	4621      	mov	r1, r4
 8000a78:	4628      	mov	r0, r5
 8000a7a:	f000 fd2f 	bl	80014dc <__smakebuf_r>
 8000a7e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a82:	f013 0201 	ands.w	r2, r3, #1
 8000a86:	d00a      	beq.n	8000a9e <__swsetup_r+0x9a>
 8000a88:	2200      	movs	r2, #0
 8000a8a:	60a2      	str	r2, [r4, #8]
 8000a8c:	6962      	ldr	r2, [r4, #20]
 8000a8e:	4252      	negs	r2, r2
 8000a90:	61a2      	str	r2, [r4, #24]
 8000a92:	6922      	ldr	r2, [r4, #16]
 8000a94:	b942      	cbnz	r2, 8000aa8 <__swsetup_r+0xa4>
 8000a96:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000a9a:	d1c5      	bne.n	8000a28 <__swsetup_r+0x24>
 8000a9c:	bd38      	pop	{r3, r4, r5, pc}
 8000a9e:	0799      	lsls	r1, r3, #30
 8000aa0:	bf58      	it	pl
 8000aa2:	6962      	ldrpl	r2, [r4, #20]
 8000aa4:	60a2      	str	r2, [r4, #8]
 8000aa6:	e7f4      	b.n	8000a92 <__swsetup_r+0x8e>
 8000aa8:	2000      	movs	r0, #0
 8000aaa:	e7f7      	b.n	8000a9c <__swsetup_r+0x98>
 8000aac:	2000000c 	.word	0x2000000c

08000ab0 <memset>:
 8000ab0:	4402      	add	r2, r0
 8000ab2:	4603      	mov	r3, r0
 8000ab4:	4293      	cmp	r3, r2
 8000ab6:	d100      	bne.n	8000aba <memset+0xa>
 8000ab8:	4770      	bx	lr
 8000aba:	f803 1b01 	strb.w	r1, [r3], #1
 8000abe:	e7f9      	b.n	8000ab4 <memset+0x4>

08000ac0 <_close_r>:
 8000ac0:	b538      	push	{r3, r4, r5, lr}
 8000ac2:	4d06      	ldr	r5, [pc, #24]	@ (8000adc <_close_r+0x1c>)
 8000ac4:	2300      	movs	r3, #0
 8000ac6:	4604      	mov	r4, r0
 8000ac8:	4608      	mov	r0, r1
 8000aca:	602b      	str	r3, [r5, #0]
 8000acc:	f7ff fc75 	bl	80003ba <_close>
 8000ad0:	1c43      	adds	r3, r0, #1
 8000ad2:	d102      	bne.n	8000ada <_close_r+0x1a>
 8000ad4:	682b      	ldr	r3, [r5, #0]
 8000ad6:	b103      	cbz	r3, 8000ada <_close_r+0x1a>
 8000ad8:	6023      	str	r3, [r4, #0]
 8000ada:	bd38      	pop	{r3, r4, r5, pc}
 8000adc:	200001b8 	.word	0x200001b8

08000ae0 <_lseek_r>:
 8000ae0:	b538      	push	{r3, r4, r5, lr}
 8000ae2:	4d07      	ldr	r5, [pc, #28]	@ (8000b00 <_lseek_r+0x20>)
 8000ae4:	4604      	mov	r4, r0
 8000ae6:	4608      	mov	r0, r1
 8000ae8:	4611      	mov	r1, r2
 8000aea:	2200      	movs	r2, #0
 8000aec:	602a      	str	r2, [r5, #0]
 8000aee:	461a      	mov	r2, r3
 8000af0:	f7ff fc8a 	bl	8000408 <_lseek>
 8000af4:	1c43      	adds	r3, r0, #1
 8000af6:	d102      	bne.n	8000afe <_lseek_r+0x1e>
 8000af8:	682b      	ldr	r3, [r5, #0]
 8000afa:	b103      	cbz	r3, 8000afe <_lseek_r+0x1e>
 8000afc:	6023      	str	r3, [r4, #0]
 8000afe:	bd38      	pop	{r3, r4, r5, pc}
 8000b00:	200001b8 	.word	0x200001b8

08000b04 <_read_r>:
 8000b04:	b538      	push	{r3, r4, r5, lr}
 8000b06:	4d07      	ldr	r5, [pc, #28]	@ (8000b24 <_read_r+0x20>)
 8000b08:	4604      	mov	r4, r0
 8000b0a:	4608      	mov	r0, r1
 8000b0c:	4611      	mov	r1, r2
 8000b0e:	2200      	movs	r2, #0
 8000b10:	602a      	str	r2, [r5, #0]
 8000b12:	461a      	mov	r2, r3
 8000b14:	f7ff fc18 	bl	8000348 <_read>
 8000b18:	1c43      	adds	r3, r0, #1
 8000b1a:	d102      	bne.n	8000b22 <_read_r+0x1e>
 8000b1c:	682b      	ldr	r3, [r5, #0]
 8000b1e:	b103      	cbz	r3, 8000b22 <_read_r+0x1e>
 8000b20:	6023      	str	r3, [r4, #0]
 8000b22:	bd38      	pop	{r3, r4, r5, pc}
 8000b24:	200001b8 	.word	0x200001b8

08000b28 <_write_r>:
 8000b28:	b538      	push	{r3, r4, r5, lr}
 8000b2a:	4d07      	ldr	r5, [pc, #28]	@ (8000b48 <_write_r+0x20>)
 8000b2c:	4604      	mov	r4, r0
 8000b2e:	4608      	mov	r0, r1
 8000b30:	4611      	mov	r1, r2
 8000b32:	2200      	movs	r2, #0
 8000b34:	602a      	str	r2, [r5, #0]
 8000b36:	461a      	mov	r2, r3
 8000b38:	f7ff fc23 	bl	8000382 <_write>
 8000b3c:	1c43      	adds	r3, r0, #1
 8000b3e:	d102      	bne.n	8000b46 <_write_r+0x1e>
 8000b40:	682b      	ldr	r3, [r5, #0]
 8000b42:	b103      	cbz	r3, 8000b46 <_write_r+0x1e>
 8000b44:	6023      	str	r3, [r4, #0]
 8000b46:	bd38      	pop	{r3, r4, r5, pc}
 8000b48:	200001b8 	.word	0x200001b8

08000b4c <__errno>:
 8000b4c:	4b01      	ldr	r3, [pc, #4]	@ (8000b54 <__errno+0x8>)
 8000b4e:	6818      	ldr	r0, [r3, #0]
 8000b50:	4770      	bx	lr
 8000b52:	bf00      	nop
 8000b54:	2000000c 	.word	0x2000000c

08000b58 <__libc_init_array>:
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	4d0d      	ldr	r5, [pc, #52]	@ (8000b90 <__libc_init_array+0x38>)
 8000b5c:	4c0d      	ldr	r4, [pc, #52]	@ (8000b94 <__libc_init_array+0x3c>)
 8000b5e:	1b64      	subs	r4, r4, r5
 8000b60:	10a4      	asrs	r4, r4, #2
 8000b62:	2600      	movs	r6, #0
 8000b64:	42a6      	cmp	r6, r4
 8000b66:	d109      	bne.n	8000b7c <__libc_init_array+0x24>
 8000b68:	4d0b      	ldr	r5, [pc, #44]	@ (8000b98 <__libc_init_array+0x40>)
 8000b6a:	4c0c      	ldr	r4, [pc, #48]	@ (8000b9c <__libc_init_array+0x44>)
 8000b6c:	f000 fd24 	bl	80015b8 <_init>
 8000b70:	1b64      	subs	r4, r4, r5
 8000b72:	10a4      	asrs	r4, r4, #2
 8000b74:	2600      	movs	r6, #0
 8000b76:	42a6      	cmp	r6, r4
 8000b78:	d105      	bne.n	8000b86 <__libc_init_array+0x2e>
 8000b7a:	bd70      	pop	{r4, r5, r6, pc}
 8000b7c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b80:	4798      	blx	r3
 8000b82:	3601      	adds	r6, #1
 8000b84:	e7ee      	b.n	8000b64 <__libc_init_array+0xc>
 8000b86:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b8a:	4798      	blx	r3
 8000b8c:	3601      	adds	r6, #1
 8000b8e:	e7f2      	b.n	8000b76 <__libc_init_array+0x1e>
 8000b90:	08001634 	.word	0x08001634
 8000b94:	08001634 	.word	0x08001634
 8000b98:	08001634 	.word	0x08001634
 8000b9c:	08001638 	.word	0x08001638

08000ba0 <__retarget_lock_init_recursive>:
 8000ba0:	4770      	bx	lr

08000ba2 <__retarget_lock_acquire_recursive>:
 8000ba2:	4770      	bx	lr

08000ba4 <__retarget_lock_release_recursive>:
 8000ba4:	4770      	bx	lr
	...

08000ba8 <_free_r>:
 8000ba8:	b538      	push	{r3, r4, r5, lr}
 8000baa:	4605      	mov	r5, r0
 8000bac:	2900      	cmp	r1, #0
 8000bae:	d041      	beq.n	8000c34 <_free_r+0x8c>
 8000bb0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000bb4:	1f0c      	subs	r4, r1, #4
 8000bb6:	2b00      	cmp	r3, #0
 8000bb8:	bfb8      	it	lt
 8000bba:	18e4      	addlt	r4, r4, r3
 8000bbc:	f000 f8e0 	bl	8000d80 <__malloc_lock>
 8000bc0:	4a1d      	ldr	r2, [pc, #116]	@ (8000c38 <_free_r+0x90>)
 8000bc2:	6813      	ldr	r3, [r2, #0]
 8000bc4:	b933      	cbnz	r3, 8000bd4 <_free_r+0x2c>
 8000bc6:	6063      	str	r3, [r4, #4]
 8000bc8:	6014      	str	r4, [r2, #0]
 8000bca:	4628      	mov	r0, r5
 8000bcc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000bd0:	f000 b8dc 	b.w	8000d8c <__malloc_unlock>
 8000bd4:	42a3      	cmp	r3, r4
 8000bd6:	d908      	bls.n	8000bea <_free_r+0x42>
 8000bd8:	6820      	ldr	r0, [r4, #0]
 8000bda:	1821      	adds	r1, r4, r0
 8000bdc:	428b      	cmp	r3, r1
 8000bde:	bf01      	itttt	eq
 8000be0:	6819      	ldreq	r1, [r3, #0]
 8000be2:	685b      	ldreq	r3, [r3, #4]
 8000be4:	1809      	addeq	r1, r1, r0
 8000be6:	6021      	streq	r1, [r4, #0]
 8000be8:	e7ed      	b.n	8000bc6 <_free_r+0x1e>
 8000bea:	461a      	mov	r2, r3
 8000bec:	685b      	ldr	r3, [r3, #4]
 8000bee:	b10b      	cbz	r3, 8000bf4 <_free_r+0x4c>
 8000bf0:	42a3      	cmp	r3, r4
 8000bf2:	d9fa      	bls.n	8000bea <_free_r+0x42>
 8000bf4:	6811      	ldr	r1, [r2, #0]
 8000bf6:	1850      	adds	r0, r2, r1
 8000bf8:	42a0      	cmp	r0, r4
 8000bfa:	d10b      	bne.n	8000c14 <_free_r+0x6c>
 8000bfc:	6820      	ldr	r0, [r4, #0]
 8000bfe:	4401      	add	r1, r0
 8000c00:	1850      	adds	r0, r2, r1
 8000c02:	4283      	cmp	r3, r0
 8000c04:	6011      	str	r1, [r2, #0]
 8000c06:	d1e0      	bne.n	8000bca <_free_r+0x22>
 8000c08:	6818      	ldr	r0, [r3, #0]
 8000c0a:	685b      	ldr	r3, [r3, #4]
 8000c0c:	6053      	str	r3, [r2, #4]
 8000c0e:	4408      	add	r0, r1
 8000c10:	6010      	str	r0, [r2, #0]
 8000c12:	e7da      	b.n	8000bca <_free_r+0x22>
 8000c14:	d902      	bls.n	8000c1c <_free_r+0x74>
 8000c16:	230c      	movs	r3, #12
 8000c18:	602b      	str	r3, [r5, #0]
 8000c1a:	e7d6      	b.n	8000bca <_free_r+0x22>
 8000c1c:	6820      	ldr	r0, [r4, #0]
 8000c1e:	1821      	adds	r1, r4, r0
 8000c20:	428b      	cmp	r3, r1
 8000c22:	bf04      	itt	eq
 8000c24:	6819      	ldreq	r1, [r3, #0]
 8000c26:	685b      	ldreq	r3, [r3, #4]
 8000c28:	6063      	str	r3, [r4, #4]
 8000c2a:	bf04      	itt	eq
 8000c2c:	1809      	addeq	r1, r1, r0
 8000c2e:	6021      	streq	r1, [r4, #0]
 8000c30:	6054      	str	r4, [r2, #4]
 8000c32:	e7ca      	b.n	8000bca <_free_r+0x22>
 8000c34:	bd38      	pop	{r3, r4, r5, pc}
 8000c36:	bf00      	nop
 8000c38:	200001c4 	.word	0x200001c4

08000c3c <sbrk_aligned>:
 8000c3c:	b570      	push	{r4, r5, r6, lr}
 8000c3e:	4e0f      	ldr	r6, [pc, #60]	@ (8000c7c <sbrk_aligned+0x40>)
 8000c40:	460c      	mov	r4, r1
 8000c42:	6831      	ldr	r1, [r6, #0]
 8000c44:	4605      	mov	r5, r0
 8000c46:	b911      	cbnz	r1, 8000c4e <sbrk_aligned+0x12>
 8000c48:	f000 fca6 	bl	8001598 <_sbrk_r>
 8000c4c:	6030      	str	r0, [r6, #0]
 8000c4e:	4621      	mov	r1, r4
 8000c50:	4628      	mov	r0, r5
 8000c52:	f000 fca1 	bl	8001598 <_sbrk_r>
 8000c56:	1c43      	adds	r3, r0, #1
 8000c58:	d103      	bne.n	8000c62 <sbrk_aligned+0x26>
 8000c5a:	f04f 34ff 	mov.w	r4, #4294967295
 8000c5e:	4620      	mov	r0, r4
 8000c60:	bd70      	pop	{r4, r5, r6, pc}
 8000c62:	1cc4      	adds	r4, r0, #3
 8000c64:	f024 0403 	bic.w	r4, r4, #3
 8000c68:	42a0      	cmp	r0, r4
 8000c6a:	d0f8      	beq.n	8000c5e <sbrk_aligned+0x22>
 8000c6c:	1a21      	subs	r1, r4, r0
 8000c6e:	4628      	mov	r0, r5
 8000c70:	f000 fc92 	bl	8001598 <_sbrk_r>
 8000c74:	3001      	adds	r0, #1
 8000c76:	d1f2      	bne.n	8000c5e <sbrk_aligned+0x22>
 8000c78:	e7ef      	b.n	8000c5a <sbrk_aligned+0x1e>
 8000c7a:	bf00      	nop
 8000c7c:	200001c0 	.word	0x200001c0

08000c80 <_malloc_r>:
 8000c80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c84:	1ccd      	adds	r5, r1, #3
 8000c86:	f025 0503 	bic.w	r5, r5, #3
 8000c8a:	3508      	adds	r5, #8
 8000c8c:	2d0c      	cmp	r5, #12
 8000c8e:	bf38      	it	cc
 8000c90:	250c      	movcc	r5, #12
 8000c92:	2d00      	cmp	r5, #0
 8000c94:	4606      	mov	r6, r0
 8000c96:	db01      	blt.n	8000c9c <_malloc_r+0x1c>
 8000c98:	42a9      	cmp	r1, r5
 8000c9a:	d904      	bls.n	8000ca6 <_malloc_r+0x26>
 8000c9c:	230c      	movs	r3, #12
 8000c9e:	6033      	str	r3, [r6, #0]
 8000ca0:	2000      	movs	r0, #0
 8000ca2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000ca6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000d7c <_malloc_r+0xfc>
 8000caa:	f000 f869 	bl	8000d80 <__malloc_lock>
 8000cae:	f8d8 3000 	ldr.w	r3, [r8]
 8000cb2:	461c      	mov	r4, r3
 8000cb4:	bb44      	cbnz	r4, 8000d08 <_malloc_r+0x88>
 8000cb6:	4629      	mov	r1, r5
 8000cb8:	4630      	mov	r0, r6
 8000cba:	f7ff ffbf 	bl	8000c3c <sbrk_aligned>
 8000cbe:	1c43      	adds	r3, r0, #1
 8000cc0:	4604      	mov	r4, r0
 8000cc2:	d158      	bne.n	8000d76 <_malloc_r+0xf6>
 8000cc4:	f8d8 4000 	ldr.w	r4, [r8]
 8000cc8:	4627      	mov	r7, r4
 8000cca:	2f00      	cmp	r7, #0
 8000ccc:	d143      	bne.n	8000d56 <_malloc_r+0xd6>
 8000cce:	2c00      	cmp	r4, #0
 8000cd0:	d04b      	beq.n	8000d6a <_malloc_r+0xea>
 8000cd2:	6823      	ldr	r3, [r4, #0]
 8000cd4:	4639      	mov	r1, r7
 8000cd6:	4630      	mov	r0, r6
 8000cd8:	eb04 0903 	add.w	r9, r4, r3
 8000cdc:	f000 fc5c 	bl	8001598 <_sbrk_r>
 8000ce0:	4581      	cmp	r9, r0
 8000ce2:	d142      	bne.n	8000d6a <_malloc_r+0xea>
 8000ce4:	6821      	ldr	r1, [r4, #0]
 8000ce6:	1a6d      	subs	r5, r5, r1
 8000ce8:	4629      	mov	r1, r5
 8000cea:	4630      	mov	r0, r6
 8000cec:	f7ff ffa6 	bl	8000c3c <sbrk_aligned>
 8000cf0:	3001      	adds	r0, #1
 8000cf2:	d03a      	beq.n	8000d6a <_malloc_r+0xea>
 8000cf4:	6823      	ldr	r3, [r4, #0]
 8000cf6:	442b      	add	r3, r5
 8000cf8:	6023      	str	r3, [r4, #0]
 8000cfa:	f8d8 3000 	ldr.w	r3, [r8]
 8000cfe:	685a      	ldr	r2, [r3, #4]
 8000d00:	bb62      	cbnz	r2, 8000d5c <_malloc_r+0xdc>
 8000d02:	f8c8 7000 	str.w	r7, [r8]
 8000d06:	e00f      	b.n	8000d28 <_malloc_r+0xa8>
 8000d08:	6822      	ldr	r2, [r4, #0]
 8000d0a:	1b52      	subs	r2, r2, r5
 8000d0c:	d420      	bmi.n	8000d50 <_malloc_r+0xd0>
 8000d0e:	2a0b      	cmp	r2, #11
 8000d10:	d917      	bls.n	8000d42 <_malloc_r+0xc2>
 8000d12:	1961      	adds	r1, r4, r5
 8000d14:	42a3      	cmp	r3, r4
 8000d16:	6025      	str	r5, [r4, #0]
 8000d18:	bf18      	it	ne
 8000d1a:	6059      	strne	r1, [r3, #4]
 8000d1c:	6863      	ldr	r3, [r4, #4]
 8000d1e:	bf08      	it	eq
 8000d20:	f8c8 1000 	streq.w	r1, [r8]
 8000d24:	5162      	str	r2, [r4, r5]
 8000d26:	604b      	str	r3, [r1, #4]
 8000d28:	4630      	mov	r0, r6
 8000d2a:	f000 f82f 	bl	8000d8c <__malloc_unlock>
 8000d2e:	f104 000b 	add.w	r0, r4, #11
 8000d32:	1d23      	adds	r3, r4, #4
 8000d34:	f020 0007 	bic.w	r0, r0, #7
 8000d38:	1ac2      	subs	r2, r0, r3
 8000d3a:	bf1c      	itt	ne
 8000d3c:	1a1b      	subne	r3, r3, r0
 8000d3e:	50a3      	strne	r3, [r4, r2]
 8000d40:	e7af      	b.n	8000ca2 <_malloc_r+0x22>
 8000d42:	6862      	ldr	r2, [r4, #4]
 8000d44:	42a3      	cmp	r3, r4
 8000d46:	bf0c      	ite	eq
 8000d48:	f8c8 2000 	streq.w	r2, [r8]
 8000d4c:	605a      	strne	r2, [r3, #4]
 8000d4e:	e7eb      	b.n	8000d28 <_malloc_r+0xa8>
 8000d50:	4623      	mov	r3, r4
 8000d52:	6864      	ldr	r4, [r4, #4]
 8000d54:	e7ae      	b.n	8000cb4 <_malloc_r+0x34>
 8000d56:	463c      	mov	r4, r7
 8000d58:	687f      	ldr	r7, [r7, #4]
 8000d5a:	e7b6      	b.n	8000cca <_malloc_r+0x4a>
 8000d5c:	461a      	mov	r2, r3
 8000d5e:	685b      	ldr	r3, [r3, #4]
 8000d60:	42a3      	cmp	r3, r4
 8000d62:	d1fb      	bne.n	8000d5c <_malloc_r+0xdc>
 8000d64:	2300      	movs	r3, #0
 8000d66:	6053      	str	r3, [r2, #4]
 8000d68:	e7de      	b.n	8000d28 <_malloc_r+0xa8>
 8000d6a:	230c      	movs	r3, #12
 8000d6c:	6033      	str	r3, [r6, #0]
 8000d6e:	4630      	mov	r0, r6
 8000d70:	f000 f80c 	bl	8000d8c <__malloc_unlock>
 8000d74:	e794      	b.n	8000ca0 <_malloc_r+0x20>
 8000d76:	6005      	str	r5, [r0, #0]
 8000d78:	e7d6      	b.n	8000d28 <_malloc_r+0xa8>
 8000d7a:	bf00      	nop
 8000d7c:	200001c4 	.word	0x200001c4

08000d80 <__malloc_lock>:
 8000d80:	4801      	ldr	r0, [pc, #4]	@ (8000d88 <__malloc_lock+0x8>)
 8000d82:	f7ff bf0e 	b.w	8000ba2 <__retarget_lock_acquire_recursive>
 8000d86:	bf00      	nop
 8000d88:	200001bc 	.word	0x200001bc

08000d8c <__malloc_unlock>:
 8000d8c:	4801      	ldr	r0, [pc, #4]	@ (8000d94 <__malloc_unlock+0x8>)
 8000d8e:	f7ff bf09 	b.w	8000ba4 <__retarget_lock_release_recursive>
 8000d92:	bf00      	nop
 8000d94:	200001bc 	.word	0x200001bc

08000d98 <__sfputc_r>:
 8000d98:	6893      	ldr	r3, [r2, #8]
 8000d9a:	3b01      	subs	r3, #1
 8000d9c:	2b00      	cmp	r3, #0
 8000d9e:	b410      	push	{r4}
 8000da0:	6093      	str	r3, [r2, #8]
 8000da2:	da08      	bge.n	8000db6 <__sfputc_r+0x1e>
 8000da4:	6994      	ldr	r4, [r2, #24]
 8000da6:	42a3      	cmp	r3, r4
 8000da8:	db01      	blt.n	8000dae <__sfputc_r+0x16>
 8000daa:	290a      	cmp	r1, #10
 8000dac:	d103      	bne.n	8000db6 <__sfputc_r+0x1e>
 8000dae:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000db2:	f7ff bde8 	b.w	8000986 <__swbuf_r>
 8000db6:	6813      	ldr	r3, [r2, #0]
 8000db8:	1c58      	adds	r0, r3, #1
 8000dba:	6010      	str	r0, [r2, #0]
 8000dbc:	7019      	strb	r1, [r3, #0]
 8000dbe:	4608      	mov	r0, r1
 8000dc0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000dc4:	4770      	bx	lr

08000dc6 <__sfputs_r>:
 8000dc6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dc8:	4606      	mov	r6, r0
 8000dca:	460f      	mov	r7, r1
 8000dcc:	4614      	mov	r4, r2
 8000dce:	18d5      	adds	r5, r2, r3
 8000dd0:	42ac      	cmp	r4, r5
 8000dd2:	d101      	bne.n	8000dd8 <__sfputs_r+0x12>
 8000dd4:	2000      	movs	r0, #0
 8000dd6:	e007      	b.n	8000de8 <__sfputs_r+0x22>
 8000dd8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ddc:	463a      	mov	r2, r7
 8000dde:	4630      	mov	r0, r6
 8000de0:	f7ff ffda 	bl	8000d98 <__sfputc_r>
 8000de4:	1c43      	adds	r3, r0, #1
 8000de6:	d1f3      	bne.n	8000dd0 <__sfputs_r+0xa>
 8000de8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000dec <_vfiprintf_r>:
 8000dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000df0:	460d      	mov	r5, r1
 8000df2:	b09d      	sub	sp, #116	@ 0x74
 8000df4:	4614      	mov	r4, r2
 8000df6:	4698      	mov	r8, r3
 8000df8:	4606      	mov	r6, r0
 8000dfa:	b118      	cbz	r0, 8000e04 <_vfiprintf_r+0x18>
 8000dfc:	6a03      	ldr	r3, [r0, #32]
 8000dfe:	b90b      	cbnz	r3, 8000e04 <_vfiprintf_r+0x18>
 8000e00:	f7ff fcd8 	bl	80007b4 <__sinit>
 8000e04:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e06:	07d9      	lsls	r1, r3, #31
 8000e08:	d405      	bmi.n	8000e16 <_vfiprintf_r+0x2a>
 8000e0a:	89ab      	ldrh	r3, [r5, #12]
 8000e0c:	059a      	lsls	r2, r3, #22
 8000e0e:	d402      	bmi.n	8000e16 <_vfiprintf_r+0x2a>
 8000e10:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e12:	f7ff fec6 	bl	8000ba2 <__retarget_lock_acquire_recursive>
 8000e16:	89ab      	ldrh	r3, [r5, #12]
 8000e18:	071b      	lsls	r3, r3, #28
 8000e1a:	d501      	bpl.n	8000e20 <_vfiprintf_r+0x34>
 8000e1c:	692b      	ldr	r3, [r5, #16]
 8000e1e:	b99b      	cbnz	r3, 8000e48 <_vfiprintf_r+0x5c>
 8000e20:	4629      	mov	r1, r5
 8000e22:	4630      	mov	r0, r6
 8000e24:	f7ff fdee 	bl	8000a04 <__swsetup_r>
 8000e28:	b170      	cbz	r0, 8000e48 <_vfiprintf_r+0x5c>
 8000e2a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e2c:	07dc      	lsls	r4, r3, #31
 8000e2e:	d504      	bpl.n	8000e3a <_vfiprintf_r+0x4e>
 8000e30:	f04f 30ff 	mov.w	r0, #4294967295
 8000e34:	b01d      	add	sp, #116	@ 0x74
 8000e36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e3a:	89ab      	ldrh	r3, [r5, #12]
 8000e3c:	0598      	lsls	r0, r3, #22
 8000e3e:	d4f7      	bmi.n	8000e30 <_vfiprintf_r+0x44>
 8000e40:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e42:	f7ff feaf 	bl	8000ba4 <__retarget_lock_release_recursive>
 8000e46:	e7f3      	b.n	8000e30 <_vfiprintf_r+0x44>
 8000e48:	2300      	movs	r3, #0
 8000e4a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e4c:	2320      	movs	r3, #32
 8000e4e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000e52:	f8cd 800c 	str.w	r8, [sp, #12]
 8000e56:	2330      	movs	r3, #48	@ 0x30
 8000e58:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8001008 <_vfiprintf_r+0x21c>
 8000e5c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000e60:	f04f 0901 	mov.w	r9, #1
 8000e64:	4623      	mov	r3, r4
 8000e66:	469a      	mov	sl, r3
 8000e68:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000e6c:	b10a      	cbz	r2, 8000e72 <_vfiprintf_r+0x86>
 8000e6e:	2a25      	cmp	r2, #37	@ 0x25
 8000e70:	d1f9      	bne.n	8000e66 <_vfiprintf_r+0x7a>
 8000e72:	ebba 0b04 	subs.w	fp, sl, r4
 8000e76:	d00b      	beq.n	8000e90 <_vfiprintf_r+0xa4>
 8000e78:	465b      	mov	r3, fp
 8000e7a:	4622      	mov	r2, r4
 8000e7c:	4629      	mov	r1, r5
 8000e7e:	4630      	mov	r0, r6
 8000e80:	f7ff ffa1 	bl	8000dc6 <__sfputs_r>
 8000e84:	3001      	adds	r0, #1
 8000e86:	f000 80a7 	beq.w	8000fd8 <_vfiprintf_r+0x1ec>
 8000e8a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000e8c:	445a      	add	r2, fp
 8000e8e:	9209      	str	r2, [sp, #36]	@ 0x24
 8000e90:	f89a 3000 	ldrb.w	r3, [sl]
 8000e94:	2b00      	cmp	r3, #0
 8000e96:	f000 809f 	beq.w	8000fd8 <_vfiprintf_r+0x1ec>
 8000e9a:	2300      	movs	r3, #0
 8000e9c:	f04f 32ff 	mov.w	r2, #4294967295
 8000ea0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ea4:	f10a 0a01 	add.w	sl, sl, #1
 8000ea8:	9304      	str	r3, [sp, #16]
 8000eaa:	9307      	str	r3, [sp, #28]
 8000eac:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000eb0:	931a      	str	r3, [sp, #104]	@ 0x68
 8000eb2:	4654      	mov	r4, sl
 8000eb4:	2205      	movs	r2, #5
 8000eb6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000eba:	4853      	ldr	r0, [pc, #332]	@ (8001008 <_vfiprintf_r+0x21c>)
 8000ebc:	f7ff f9a8 	bl	8000210 <memchr>
 8000ec0:	9a04      	ldr	r2, [sp, #16]
 8000ec2:	b9d8      	cbnz	r0, 8000efc <_vfiprintf_r+0x110>
 8000ec4:	06d1      	lsls	r1, r2, #27
 8000ec6:	bf44      	itt	mi
 8000ec8:	2320      	movmi	r3, #32
 8000eca:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000ece:	0713      	lsls	r3, r2, #28
 8000ed0:	bf44      	itt	mi
 8000ed2:	232b      	movmi	r3, #43	@ 0x2b
 8000ed4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000ed8:	f89a 3000 	ldrb.w	r3, [sl]
 8000edc:	2b2a      	cmp	r3, #42	@ 0x2a
 8000ede:	d015      	beq.n	8000f0c <_vfiprintf_r+0x120>
 8000ee0:	9a07      	ldr	r2, [sp, #28]
 8000ee2:	4654      	mov	r4, sl
 8000ee4:	2000      	movs	r0, #0
 8000ee6:	f04f 0c0a 	mov.w	ip, #10
 8000eea:	4621      	mov	r1, r4
 8000eec:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ef0:	3b30      	subs	r3, #48	@ 0x30
 8000ef2:	2b09      	cmp	r3, #9
 8000ef4:	d94b      	bls.n	8000f8e <_vfiprintf_r+0x1a2>
 8000ef6:	b1b0      	cbz	r0, 8000f26 <_vfiprintf_r+0x13a>
 8000ef8:	9207      	str	r2, [sp, #28]
 8000efa:	e014      	b.n	8000f26 <_vfiprintf_r+0x13a>
 8000efc:	eba0 0308 	sub.w	r3, r0, r8
 8000f00:	fa09 f303 	lsl.w	r3, r9, r3
 8000f04:	4313      	orrs	r3, r2
 8000f06:	9304      	str	r3, [sp, #16]
 8000f08:	46a2      	mov	sl, r4
 8000f0a:	e7d2      	b.n	8000eb2 <_vfiprintf_r+0xc6>
 8000f0c:	9b03      	ldr	r3, [sp, #12]
 8000f0e:	1d19      	adds	r1, r3, #4
 8000f10:	681b      	ldr	r3, [r3, #0]
 8000f12:	9103      	str	r1, [sp, #12]
 8000f14:	2b00      	cmp	r3, #0
 8000f16:	bfbb      	ittet	lt
 8000f18:	425b      	neglt	r3, r3
 8000f1a:	f042 0202 	orrlt.w	r2, r2, #2
 8000f1e:	9307      	strge	r3, [sp, #28]
 8000f20:	9307      	strlt	r3, [sp, #28]
 8000f22:	bfb8      	it	lt
 8000f24:	9204      	strlt	r2, [sp, #16]
 8000f26:	7823      	ldrb	r3, [r4, #0]
 8000f28:	2b2e      	cmp	r3, #46	@ 0x2e
 8000f2a:	d10a      	bne.n	8000f42 <_vfiprintf_r+0x156>
 8000f2c:	7863      	ldrb	r3, [r4, #1]
 8000f2e:	2b2a      	cmp	r3, #42	@ 0x2a
 8000f30:	d132      	bne.n	8000f98 <_vfiprintf_r+0x1ac>
 8000f32:	9b03      	ldr	r3, [sp, #12]
 8000f34:	1d1a      	adds	r2, r3, #4
 8000f36:	681b      	ldr	r3, [r3, #0]
 8000f38:	9203      	str	r2, [sp, #12]
 8000f3a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000f3e:	3402      	adds	r4, #2
 8000f40:	9305      	str	r3, [sp, #20]
 8000f42:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8001018 <_vfiprintf_r+0x22c>
 8000f46:	7821      	ldrb	r1, [r4, #0]
 8000f48:	2203      	movs	r2, #3
 8000f4a:	4650      	mov	r0, sl
 8000f4c:	f7ff f960 	bl	8000210 <memchr>
 8000f50:	b138      	cbz	r0, 8000f62 <_vfiprintf_r+0x176>
 8000f52:	9b04      	ldr	r3, [sp, #16]
 8000f54:	eba0 000a 	sub.w	r0, r0, sl
 8000f58:	2240      	movs	r2, #64	@ 0x40
 8000f5a:	4082      	lsls	r2, r0
 8000f5c:	4313      	orrs	r3, r2
 8000f5e:	3401      	adds	r4, #1
 8000f60:	9304      	str	r3, [sp, #16]
 8000f62:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f66:	4829      	ldr	r0, [pc, #164]	@ (800100c <_vfiprintf_r+0x220>)
 8000f68:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000f6c:	2206      	movs	r2, #6
 8000f6e:	f7ff f94f 	bl	8000210 <memchr>
 8000f72:	2800      	cmp	r0, #0
 8000f74:	d03f      	beq.n	8000ff6 <_vfiprintf_r+0x20a>
 8000f76:	4b26      	ldr	r3, [pc, #152]	@ (8001010 <_vfiprintf_r+0x224>)
 8000f78:	bb1b      	cbnz	r3, 8000fc2 <_vfiprintf_r+0x1d6>
 8000f7a:	9b03      	ldr	r3, [sp, #12]
 8000f7c:	3307      	adds	r3, #7
 8000f7e:	f023 0307 	bic.w	r3, r3, #7
 8000f82:	3308      	adds	r3, #8
 8000f84:	9303      	str	r3, [sp, #12]
 8000f86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000f88:	443b      	add	r3, r7
 8000f8a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000f8c:	e76a      	b.n	8000e64 <_vfiprintf_r+0x78>
 8000f8e:	fb0c 3202 	mla	r2, ip, r2, r3
 8000f92:	460c      	mov	r4, r1
 8000f94:	2001      	movs	r0, #1
 8000f96:	e7a8      	b.n	8000eea <_vfiprintf_r+0xfe>
 8000f98:	2300      	movs	r3, #0
 8000f9a:	3401      	adds	r4, #1
 8000f9c:	9305      	str	r3, [sp, #20]
 8000f9e:	4619      	mov	r1, r3
 8000fa0:	f04f 0c0a 	mov.w	ip, #10
 8000fa4:	4620      	mov	r0, r4
 8000fa6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000faa:	3a30      	subs	r2, #48	@ 0x30
 8000fac:	2a09      	cmp	r2, #9
 8000fae:	d903      	bls.n	8000fb8 <_vfiprintf_r+0x1cc>
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	d0c6      	beq.n	8000f42 <_vfiprintf_r+0x156>
 8000fb4:	9105      	str	r1, [sp, #20]
 8000fb6:	e7c4      	b.n	8000f42 <_vfiprintf_r+0x156>
 8000fb8:	fb0c 2101 	mla	r1, ip, r1, r2
 8000fbc:	4604      	mov	r4, r0
 8000fbe:	2301      	movs	r3, #1
 8000fc0:	e7f0      	b.n	8000fa4 <_vfiprintf_r+0x1b8>
 8000fc2:	ab03      	add	r3, sp, #12
 8000fc4:	9300      	str	r3, [sp, #0]
 8000fc6:	462a      	mov	r2, r5
 8000fc8:	4b12      	ldr	r3, [pc, #72]	@ (8001014 <_vfiprintf_r+0x228>)
 8000fca:	a904      	add	r1, sp, #16
 8000fcc:	4630      	mov	r0, r6
 8000fce:	f3af 8000 	nop.w
 8000fd2:	4607      	mov	r7, r0
 8000fd4:	1c78      	adds	r0, r7, #1
 8000fd6:	d1d6      	bne.n	8000f86 <_vfiprintf_r+0x19a>
 8000fd8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000fda:	07d9      	lsls	r1, r3, #31
 8000fdc:	d405      	bmi.n	8000fea <_vfiprintf_r+0x1fe>
 8000fde:	89ab      	ldrh	r3, [r5, #12]
 8000fe0:	059a      	lsls	r2, r3, #22
 8000fe2:	d402      	bmi.n	8000fea <_vfiprintf_r+0x1fe>
 8000fe4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000fe6:	f7ff fddd 	bl	8000ba4 <__retarget_lock_release_recursive>
 8000fea:	89ab      	ldrh	r3, [r5, #12]
 8000fec:	065b      	lsls	r3, r3, #25
 8000fee:	f53f af1f 	bmi.w	8000e30 <_vfiprintf_r+0x44>
 8000ff2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000ff4:	e71e      	b.n	8000e34 <_vfiprintf_r+0x48>
 8000ff6:	ab03      	add	r3, sp, #12
 8000ff8:	9300      	str	r3, [sp, #0]
 8000ffa:	462a      	mov	r2, r5
 8000ffc:	4b05      	ldr	r3, [pc, #20]	@ (8001014 <_vfiprintf_r+0x228>)
 8000ffe:	a904      	add	r1, sp, #16
 8001000:	4630      	mov	r0, r6
 8001002:	f000 f879 	bl	80010f8 <_printf_i>
 8001006:	e7e4      	b.n	8000fd2 <_vfiprintf_r+0x1e6>
 8001008:	080015f6 	.word	0x080015f6
 800100c:	08001600 	.word	0x08001600
 8001010:	00000000 	.word	0x00000000
 8001014:	08000dc7 	.word	0x08000dc7
 8001018:	080015fc 	.word	0x080015fc

0800101c <_printf_common>:
 800101c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001020:	4616      	mov	r6, r2
 8001022:	4698      	mov	r8, r3
 8001024:	688a      	ldr	r2, [r1, #8]
 8001026:	690b      	ldr	r3, [r1, #16]
 8001028:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800102c:	4293      	cmp	r3, r2
 800102e:	bfb8      	it	lt
 8001030:	4613      	movlt	r3, r2
 8001032:	6033      	str	r3, [r6, #0]
 8001034:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001038:	4607      	mov	r7, r0
 800103a:	460c      	mov	r4, r1
 800103c:	b10a      	cbz	r2, 8001042 <_printf_common+0x26>
 800103e:	3301      	adds	r3, #1
 8001040:	6033      	str	r3, [r6, #0]
 8001042:	6823      	ldr	r3, [r4, #0]
 8001044:	0699      	lsls	r1, r3, #26
 8001046:	bf42      	ittt	mi
 8001048:	6833      	ldrmi	r3, [r6, #0]
 800104a:	3302      	addmi	r3, #2
 800104c:	6033      	strmi	r3, [r6, #0]
 800104e:	6825      	ldr	r5, [r4, #0]
 8001050:	f015 0506 	ands.w	r5, r5, #6
 8001054:	d106      	bne.n	8001064 <_printf_common+0x48>
 8001056:	f104 0a19 	add.w	sl, r4, #25
 800105a:	68e3      	ldr	r3, [r4, #12]
 800105c:	6832      	ldr	r2, [r6, #0]
 800105e:	1a9b      	subs	r3, r3, r2
 8001060:	42ab      	cmp	r3, r5
 8001062:	dc26      	bgt.n	80010b2 <_printf_common+0x96>
 8001064:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001068:	6822      	ldr	r2, [r4, #0]
 800106a:	3b00      	subs	r3, #0
 800106c:	bf18      	it	ne
 800106e:	2301      	movne	r3, #1
 8001070:	0692      	lsls	r2, r2, #26
 8001072:	d42b      	bmi.n	80010cc <_printf_common+0xb0>
 8001074:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001078:	4641      	mov	r1, r8
 800107a:	4638      	mov	r0, r7
 800107c:	47c8      	blx	r9
 800107e:	3001      	adds	r0, #1
 8001080:	d01e      	beq.n	80010c0 <_printf_common+0xa4>
 8001082:	6823      	ldr	r3, [r4, #0]
 8001084:	6922      	ldr	r2, [r4, #16]
 8001086:	f003 0306 	and.w	r3, r3, #6
 800108a:	2b04      	cmp	r3, #4
 800108c:	bf02      	ittt	eq
 800108e:	68e5      	ldreq	r5, [r4, #12]
 8001090:	6833      	ldreq	r3, [r6, #0]
 8001092:	1aed      	subeq	r5, r5, r3
 8001094:	68a3      	ldr	r3, [r4, #8]
 8001096:	bf0c      	ite	eq
 8001098:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800109c:	2500      	movne	r5, #0
 800109e:	4293      	cmp	r3, r2
 80010a0:	bfc4      	itt	gt
 80010a2:	1a9b      	subgt	r3, r3, r2
 80010a4:	18ed      	addgt	r5, r5, r3
 80010a6:	2600      	movs	r6, #0
 80010a8:	341a      	adds	r4, #26
 80010aa:	42b5      	cmp	r5, r6
 80010ac:	d11a      	bne.n	80010e4 <_printf_common+0xc8>
 80010ae:	2000      	movs	r0, #0
 80010b0:	e008      	b.n	80010c4 <_printf_common+0xa8>
 80010b2:	2301      	movs	r3, #1
 80010b4:	4652      	mov	r2, sl
 80010b6:	4641      	mov	r1, r8
 80010b8:	4638      	mov	r0, r7
 80010ba:	47c8      	blx	r9
 80010bc:	3001      	adds	r0, #1
 80010be:	d103      	bne.n	80010c8 <_printf_common+0xac>
 80010c0:	f04f 30ff 	mov.w	r0, #4294967295
 80010c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010c8:	3501      	adds	r5, #1
 80010ca:	e7c6      	b.n	800105a <_printf_common+0x3e>
 80010cc:	18e1      	adds	r1, r4, r3
 80010ce:	1c5a      	adds	r2, r3, #1
 80010d0:	2030      	movs	r0, #48	@ 0x30
 80010d2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80010d6:	4422      	add	r2, r4
 80010d8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80010dc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80010e0:	3302      	adds	r3, #2
 80010e2:	e7c7      	b.n	8001074 <_printf_common+0x58>
 80010e4:	2301      	movs	r3, #1
 80010e6:	4622      	mov	r2, r4
 80010e8:	4641      	mov	r1, r8
 80010ea:	4638      	mov	r0, r7
 80010ec:	47c8      	blx	r9
 80010ee:	3001      	adds	r0, #1
 80010f0:	d0e6      	beq.n	80010c0 <_printf_common+0xa4>
 80010f2:	3601      	adds	r6, #1
 80010f4:	e7d9      	b.n	80010aa <_printf_common+0x8e>
	...

080010f8 <_printf_i>:
 80010f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80010fc:	7e0f      	ldrb	r7, [r1, #24]
 80010fe:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001100:	2f78      	cmp	r7, #120	@ 0x78
 8001102:	4691      	mov	r9, r2
 8001104:	4680      	mov	r8, r0
 8001106:	460c      	mov	r4, r1
 8001108:	469a      	mov	sl, r3
 800110a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800110e:	d807      	bhi.n	8001120 <_printf_i+0x28>
 8001110:	2f62      	cmp	r7, #98	@ 0x62
 8001112:	d80a      	bhi.n	800112a <_printf_i+0x32>
 8001114:	2f00      	cmp	r7, #0
 8001116:	f000 80d2 	beq.w	80012be <_printf_i+0x1c6>
 800111a:	2f58      	cmp	r7, #88	@ 0x58
 800111c:	f000 80b9 	beq.w	8001292 <_printf_i+0x19a>
 8001120:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001124:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001128:	e03a      	b.n	80011a0 <_printf_i+0xa8>
 800112a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800112e:	2b15      	cmp	r3, #21
 8001130:	d8f6      	bhi.n	8001120 <_printf_i+0x28>
 8001132:	a101      	add	r1, pc, #4	@ (adr r1, 8001138 <_printf_i+0x40>)
 8001134:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001138:	08001191 	.word	0x08001191
 800113c:	080011a5 	.word	0x080011a5
 8001140:	08001121 	.word	0x08001121
 8001144:	08001121 	.word	0x08001121
 8001148:	08001121 	.word	0x08001121
 800114c:	08001121 	.word	0x08001121
 8001150:	080011a5 	.word	0x080011a5
 8001154:	08001121 	.word	0x08001121
 8001158:	08001121 	.word	0x08001121
 800115c:	08001121 	.word	0x08001121
 8001160:	08001121 	.word	0x08001121
 8001164:	080012a5 	.word	0x080012a5
 8001168:	080011cf 	.word	0x080011cf
 800116c:	0800125f 	.word	0x0800125f
 8001170:	08001121 	.word	0x08001121
 8001174:	08001121 	.word	0x08001121
 8001178:	080012c7 	.word	0x080012c7
 800117c:	08001121 	.word	0x08001121
 8001180:	080011cf 	.word	0x080011cf
 8001184:	08001121 	.word	0x08001121
 8001188:	08001121 	.word	0x08001121
 800118c:	08001267 	.word	0x08001267
 8001190:	6833      	ldr	r3, [r6, #0]
 8001192:	1d1a      	adds	r2, r3, #4
 8001194:	681b      	ldr	r3, [r3, #0]
 8001196:	6032      	str	r2, [r6, #0]
 8001198:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800119c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80011a0:	2301      	movs	r3, #1
 80011a2:	e09d      	b.n	80012e0 <_printf_i+0x1e8>
 80011a4:	6833      	ldr	r3, [r6, #0]
 80011a6:	6820      	ldr	r0, [r4, #0]
 80011a8:	1d19      	adds	r1, r3, #4
 80011aa:	6031      	str	r1, [r6, #0]
 80011ac:	0606      	lsls	r6, r0, #24
 80011ae:	d501      	bpl.n	80011b4 <_printf_i+0xbc>
 80011b0:	681d      	ldr	r5, [r3, #0]
 80011b2:	e003      	b.n	80011bc <_printf_i+0xc4>
 80011b4:	0645      	lsls	r5, r0, #25
 80011b6:	d5fb      	bpl.n	80011b0 <_printf_i+0xb8>
 80011b8:	f9b3 5000 	ldrsh.w	r5, [r3]
 80011bc:	2d00      	cmp	r5, #0
 80011be:	da03      	bge.n	80011c8 <_printf_i+0xd0>
 80011c0:	232d      	movs	r3, #45	@ 0x2d
 80011c2:	426d      	negs	r5, r5
 80011c4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80011c8:	4859      	ldr	r0, [pc, #356]	@ (8001330 <_printf_i+0x238>)
 80011ca:	230a      	movs	r3, #10
 80011cc:	e011      	b.n	80011f2 <_printf_i+0xfa>
 80011ce:	6821      	ldr	r1, [r4, #0]
 80011d0:	6833      	ldr	r3, [r6, #0]
 80011d2:	0608      	lsls	r0, r1, #24
 80011d4:	f853 5b04 	ldr.w	r5, [r3], #4
 80011d8:	d402      	bmi.n	80011e0 <_printf_i+0xe8>
 80011da:	0649      	lsls	r1, r1, #25
 80011dc:	bf48      	it	mi
 80011de:	b2ad      	uxthmi	r5, r5
 80011e0:	2f6f      	cmp	r7, #111	@ 0x6f
 80011e2:	4853      	ldr	r0, [pc, #332]	@ (8001330 <_printf_i+0x238>)
 80011e4:	6033      	str	r3, [r6, #0]
 80011e6:	bf14      	ite	ne
 80011e8:	230a      	movne	r3, #10
 80011ea:	2308      	moveq	r3, #8
 80011ec:	2100      	movs	r1, #0
 80011ee:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80011f2:	6866      	ldr	r6, [r4, #4]
 80011f4:	60a6      	str	r6, [r4, #8]
 80011f6:	2e00      	cmp	r6, #0
 80011f8:	bfa2      	ittt	ge
 80011fa:	6821      	ldrge	r1, [r4, #0]
 80011fc:	f021 0104 	bicge.w	r1, r1, #4
 8001200:	6021      	strge	r1, [r4, #0]
 8001202:	b90d      	cbnz	r5, 8001208 <_printf_i+0x110>
 8001204:	2e00      	cmp	r6, #0
 8001206:	d04b      	beq.n	80012a0 <_printf_i+0x1a8>
 8001208:	4616      	mov	r6, r2
 800120a:	fbb5 f1f3 	udiv	r1, r5, r3
 800120e:	fb03 5711 	mls	r7, r3, r1, r5
 8001212:	5dc7      	ldrb	r7, [r0, r7]
 8001214:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001218:	462f      	mov	r7, r5
 800121a:	42bb      	cmp	r3, r7
 800121c:	460d      	mov	r5, r1
 800121e:	d9f4      	bls.n	800120a <_printf_i+0x112>
 8001220:	2b08      	cmp	r3, #8
 8001222:	d10b      	bne.n	800123c <_printf_i+0x144>
 8001224:	6823      	ldr	r3, [r4, #0]
 8001226:	07df      	lsls	r7, r3, #31
 8001228:	d508      	bpl.n	800123c <_printf_i+0x144>
 800122a:	6923      	ldr	r3, [r4, #16]
 800122c:	6861      	ldr	r1, [r4, #4]
 800122e:	4299      	cmp	r1, r3
 8001230:	bfde      	ittt	le
 8001232:	2330      	movle	r3, #48	@ 0x30
 8001234:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001238:	f106 36ff 	addle.w	r6, r6, #4294967295
 800123c:	1b92      	subs	r2, r2, r6
 800123e:	6122      	str	r2, [r4, #16]
 8001240:	f8cd a000 	str.w	sl, [sp]
 8001244:	464b      	mov	r3, r9
 8001246:	aa03      	add	r2, sp, #12
 8001248:	4621      	mov	r1, r4
 800124a:	4640      	mov	r0, r8
 800124c:	f7ff fee6 	bl	800101c <_printf_common>
 8001250:	3001      	adds	r0, #1
 8001252:	d14a      	bne.n	80012ea <_printf_i+0x1f2>
 8001254:	f04f 30ff 	mov.w	r0, #4294967295
 8001258:	b004      	add	sp, #16
 800125a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800125e:	6823      	ldr	r3, [r4, #0]
 8001260:	f043 0320 	orr.w	r3, r3, #32
 8001264:	6023      	str	r3, [r4, #0]
 8001266:	4833      	ldr	r0, [pc, #204]	@ (8001334 <_printf_i+0x23c>)
 8001268:	2778      	movs	r7, #120	@ 0x78
 800126a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800126e:	6823      	ldr	r3, [r4, #0]
 8001270:	6831      	ldr	r1, [r6, #0]
 8001272:	061f      	lsls	r7, r3, #24
 8001274:	f851 5b04 	ldr.w	r5, [r1], #4
 8001278:	d402      	bmi.n	8001280 <_printf_i+0x188>
 800127a:	065f      	lsls	r7, r3, #25
 800127c:	bf48      	it	mi
 800127e:	b2ad      	uxthmi	r5, r5
 8001280:	6031      	str	r1, [r6, #0]
 8001282:	07d9      	lsls	r1, r3, #31
 8001284:	bf44      	itt	mi
 8001286:	f043 0320 	orrmi.w	r3, r3, #32
 800128a:	6023      	strmi	r3, [r4, #0]
 800128c:	b11d      	cbz	r5, 8001296 <_printf_i+0x19e>
 800128e:	2310      	movs	r3, #16
 8001290:	e7ac      	b.n	80011ec <_printf_i+0xf4>
 8001292:	4827      	ldr	r0, [pc, #156]	@ (8001330 <_printf_i+0x238>)
 8001294:	e7e9      	b.n	800126a <_printf_i+0x172>
 8001296:	6823      	ldr	r3, [r4, #0]
 8001298:	f023 0320 	bic.w	r3, r3, #32
 800129c:	6023      	str	r3, [r4, #0]
 800129e:	e7f6      	b.n	800128e <_printf_i+0x196>
 80012a0:	4616      	mov	r6, r2
 80012a2:	e7bd      	b.n	8001220 <_printf_i+0x128>
 80012a4:	6833      	ldr	r3, [r6, #0]
 80012a6:	6825      	ldr	r5, [r4, #0]
 80012a8:	6961      	ldr	r1, [r4, #20]
 80012aa:	1d18      	adds	r0, r3, #4
 80012ac:	6030      	str	r0, [r6, #0]
 80012ae:	062e      	lsls	r6, r5, #24
 80012b0:	681b      	ldr	r3, [r3, #0]
 80012b2:	d501      	bpl.n	80012b8 <_printf_i+0x1c0>
 80012b4:	6019      	str	r1, [r3, #0]
 80012b6:	e002      	b.n	80012be <_printf_i+0x1c6>
 80012b8:	0668      	lsls	r0, r5, #25
 80012ba:	d5fb      	bpl.n	80012b4 <_printf_i+0x1bc>
 80012bc:	8019      	strh	r1, [r3, #0]
 80012be:	2300      	movs	r3, #0
 80012c0:	6123      	str	r3, [r4, #16]
 80012c2:	4616      	mov	r6, r2
 80012c4:	e7bc      	b.n	8001240 <_printf_i+0x148>
 80012c6:	6833      	ldr	r3, [r6, #0]
 80012c8:	1d1a      	adds	r2, r3, #4
 80012ca:	6032      	str	r2, [r6, #0]
 80012cc:	681e      	ldr	r6, [r3, #0]
 80012ce:	6862      	ldr	r2, [r4, #4]
 80012d0:	2100      	movs	r1, #0
 80012d2:	4630      	mov	r0, r6
 80012d4:	f7fe ff9c 	bl	8000210 <memchr>
 80012d8:	b108      	cbz	r0, 80012de <_printf_i+0x1e6>
 80012da:	1b80      	subs	r0, r0, r6
 80012dc:	6060      	str	r0, [r4, #4]
 80012de:	6863      	ldr	r3, [r4, #4]
 80012e0:	6123      	str	r3, [r4, #16]
 80012e2:	2300      	movs	r3, #0
 80012e4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80012e8:	e7aa      	b.n	8001240 <_printf_i+0x148>
 80012ea:	6923      	ldr	r3, [r4, #16]
 80012ec:	4632      	mov	r2, r6
 80012ee:	4649      	mov	r1, r9
 80012f0:	4640      	mov	r0, r8
 80012f2:	47d0      	blx	sl
 80012f4:	3001      	adds	r0, #1
 80012f6:	d0ad      	beq.n	8001254 <_printf_i+0x15c>
 80012f8:	6823      	ldr	r3, [r4, #0]
 80012fa:	079b      	lsls	r3, r3, #30
 80012fc:	d413      	bmi.n	8001326 <_printf_i+0x22e>
 80012fe:	68e0      	ldr	r0, [r4, #12]
 8001300:	9b03      	ldr	r3, [sp, #12]
 8001302:	4298      	cmp	r0, r3
 8001304:	bfb8      	it	lt
 8001306:	4618      	movlt	r0, r3
 8001308:	e7a6      	b.n	8001258 <_printf_i+0x160>
 800130a:	2301      	movs	r3, #1
 800130c:	4632      	mov	r2, r6
 800130e:	4649      	mov	r1, r9
 8001310:	4640      	mov	r0, r8
 8001312:	47d0      	blx	sl
 8001314:	3001      	adds	r0, #1
 8001316:	d09d      	beq.n	8001254 <_printf_i+0x15c>
 8001318:	3501      	adds	r5, #1
 800131a:	68e3      	ldr	r3, [r4, #12]
 800131c:	9903      	ldr	r1, [sp, #12]
 800131e:	1a5b      	subs	r3, r3, r1
 8001320:	42ab      	cmp	r3, r5
 8001322:	dcf2      	bgt.n	800130a <_printf_i+0x212>
 8001324:	e7eb      	b.n	80012fe <_printf_i+0x206>
 8001326:	2500      	movs	r5, #0
 8001328:	f104 0619 	add.w	r6, r4, #25
 800132c:	e7f5      	b.n	800131a <_printf_i+0x222>
 800132e:	bf00      	nop
 8001330:	08001607 	.word	0x08001607
 8001334:	08001618 	.word	0x08001618

08001338 <__sflush_r>:
 8001338:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800133c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001340:	0716      	lsls	r6, r2, #28
 8001342:	4605      	mov	r5, r0
 8001344:	460c      	mov	r4, r1
 8001346:	d454      	bmi.n	80013f2 <__sflush_r+0xba>
 8001348:	684b      	ldr	r3, [r1, #4]
 800134a:	2b00      	cmp	r3, #0
 800134c:	dc02      	bgt.n	8001354 <__sflush_r+0x1c>
 800134e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001350:	2b00      	cmp	r3, #0
 8001352:	dd48      	ble.n	80013e6 <__sflush_r+0xae>
 8001354:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001356:	2e00      	cmp	r6, #0
 8001358:	d045      	beq.n	80013e6 <__sflush_r+0xae>
 800135a:	2300      	movs	r3, #0
 800135c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001360:	682f      	ldr	r7, [r5, #0]
 8001362:	6a21      	ldr	r1, [r4, #32]
 8001364:	602b      	str	r3, [r5, #0]
 8001366:	d030      	beq.n	80013ca <__sflush_r+0x92>
 8001368:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800136a:	89a3      	ldrh	r3, [r4, #12]
 800136c:	0759      	lsls	r1, r3, #29
 800136e:	d505      	bpl.n	800137c <__sflush_r+0x44>
 8001370:	6863      	ldr	r3, [r4, #4]
 8001372:	1ad2      	subs	r2, r2, r3
 8001374:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001376:	b10b      	cbz	r3, 800137c <__sflush_r+0x44>
 8001378:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800137a:	1ad2      	subs	r2, r2, r3
 800137c:	2300      	movs	r3, #0
 800137e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001380:	6a21      	ldr	r1, [r4, #32]
 8001382:	4628      	mov	r0, r5
 8001384:	47b0      	blx	r6
 8001386:	1c43      	adds	r3, r0, #1
 8001388:	89a3      	ldrh	r3, [r4, #12]
 800138a:	d106      	bne.n	800139a <__sflush_r+0x62>
 800138c:	6829      	ldr	r1, [r5, #0]
 800138e:	291d      	cmp	r1, #29
 8001390:	d82b      	bhi.n	80013ea <__sflush_r+0xb2>
 8001392:	4a2a      	ldr	r2, [pc, #168]	@ (800143c <__sflush_r+0x104>)
 8001394:	410a      	asrs	r2, r1
 8001396:	07d6      	lsls	r6, r2, #31
 8001398:	d427      	bmi.n	80013ea <__sflush_r+0xb2>
 800139a:	2200      	movs	r2, #0
 800139c:	6062      	str	r2, [r4, #4]
 800139e:	04d9      	lsls	r1, r3, #19
 80013a0:	6922      	ldr	r2, [r4, #16]
 80013a2:	6022      	str	r2, [r4, #0]
 80013a4:	d504      	bpl.n	80013b0 <__sflush_r+0x78>
 80013a6:	1c42      	adds	r2, r0, #1
 80013a8:	d101      	bne.n	80013ae <__sflush_r+0x76>
 80013aa:	682b      	ldr	r3, [r5, #0]
 80013ac:	b903      	cbnz	r3, 80013b0 <__sflush_r+0x78>
 80013ae:	6560      	str	r0, [r4, #84]	@ 0x54
 80013b0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80013b2:	602f      	str	r7, [r5, #0]
 80013b4:	b1b9      	cbz	r1, 80013e6 <__sflush_r+0xae>
 80013b6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80013ba:	4299      	cmp	r1, r3
 80013bc:	d002      	beq.n	80013c4 <__sflush_r+0x8c>
 80013be:	4628      	mov	r0, r5
 80013c0:	f7ff fbf2 	bl	8000ba8 <_free_r>
 80013c4:	2300      	movs	r3, #0
 80013c6:	6363      	str	r3, [r4, #52]	@ 0x34
 80013c8:	e00d      	b.n	80013e6 <__sflush_r+0xae>
 80013ca:	2301      	movs	r3, #1
 80013cc:	4628      	mov	r0, r5
 80013ce:	47b0      	blx	r6
 80013d0:	4602      	mov	r2, r0
 80013d2:	1c50      	adds	r0, r2, #1
 80013d4:	d1c9      	bne.n	800136a <__sflush_r+0x32>
 80013d6:	682b      	ldr	r3, [r5, #0]
 80013d8:	2b00      	cmp	r3, #0
 80013da:	d0c6      	beq.n	800136a <__sflush_r+0x32>
 80013dc:	2b1d      	cmp	r3, #29
 80013de:	d001      	beq.n	80013e4 <__sflush_r+0xac>
 80013e0:	2b16      	cmp	r3, #22
 80013e2:	d11e      	bne.n	8001422 <__sflush_r+0xea>
 80013e4:	602f      	str	r7, [r5, #0]
 80013e6:	2000      	movs	r0, #0
 80013e8:	e022      	b.n	8001430 <__sflush_r+0xf8>
 80013ea:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80013ee:	b21b      	sxth	r3, r3
 80013f0:	e01b      	b.n	800142a <__sflush_r+0xf2>
 80013f2:	690f      	ldr	r7, [r1, #16]
 80013f4:	2f00      	cmp	r7, #0
 80013f6:	d0f6      	beq.n	80013e6 <__sflush_r+0xae>
 80013f8:	0793      	lsls	r3, r2, #30
 80013fa:	680e      	ldr	r6, [r1, #0]
 80013fc:	bf08      	it	eq
 80013fe:	694b      	ldreq	r3, [r1, #20]
 8001400:	600f      	str	r7, [r1, #0]
 8001402:	bf18      	it	ne
 8001404:	2300      	movne	r3, #0
 8001406:	eba6 0807 	sub.w	r8, r6, r7
 800140a:	608b      	str	r3, [r1, #8]
 800140c:	f1b8 0f00 	cmp.w	r8, #0
 8001410:	dde9      	ble.n	80013e6 <__sflush_r+0xae>
 8001412:	6a21      	ldr	r1, [r4, #32]
 8001414:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8001416:	4643      	mov	r3, r8
 8001418:	463a      	mov	r2, r7
 800141a:	4628      	mov	r0, r5
 800141c:	47b0      	blx	r6
 800141e:	2800      	cmp	r0, #0
 8001420:	dc08      	bgt.n	8001434 <__sflush_r+0xfc>
 8001422:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001426:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800142a:	81a3      	strh	r3, [r4, #12]
 800142c:	f04f 30ff 	mov.w	r0, #4294967295
 8001430:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001434:	4407      	add	r7, r0
 8001436:	eba8 0800 	sub.w	r8, r8, r0
 800143a:	e7e7      	b.n	800140c <__sflush_r+0xd4>
 800143c:	dfbffffe 	.word	0xdfbffffe

08001440 <_fflush_r>:
 8001440:	b538      	push	{r3, r4, r5, lr}
 8001442:	690b      	ldr	r3, [r1, #16]
 8001444:	4605      	mov	r5, r0
 8001446:	460c      	mov	r4, r1
 8001448:	b913      	cbnz	r3, 8001450 <_fflush_r+0x10>
 800144a:	2500      	movs	r5, #0
 800144c:	4628      	mov	r0, r5
 800144e:	bd38      	pop	{r3, r4, r5, pc}
 8001450:	b118      	cbz	r0, 800145a <_fflush_r+0x1a>
 8001452:	6a03      	ldr	r3, [r0, #32]
 8001454:	b90b      	cbnz	r3, 800145a <_fflush_r+0x1a>
 8001456:	f7ff f9ad 	bl	80007b4 <__sinit>
 800145a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800145e:	2b00      	cmp	r3, #0
 8001460:	d0f3      	beq.n	800144a <_fflush_r+0xa>
 8001462:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001464:	07d0      	lsls	r0, r2, #31
 8001466:	d404      	bmi.n	8001472 <_fflush_r+0x32>
 8001468:	0599      	lsls	r1, r3, #22
 800146a:	d402      	bmi.n	8001472 <_fflush_r+0x32>
 800146c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800146e:	f7ff fb98 	bl	8000ba2 <__retarget_lock_acquire_recursive>
 8001472:	4628      	mov	r0, r5
 8001474:	4621      	mov	r1, r4
 8001476:	f7ff ff5f 	bl	8001338 <__sflush_r>
 800147a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800147c:	07da      	lsls	r2, r3, #31
 800147e:	4605      	mov	r5, r0
 8001480:	d4e4      	bmi.n	800144c <_fflush_r+0xc>
 8001482:	89a3      	ldrh	r3, [r4, #12]
 8001484:	059b      	lsls	r3, r3, #22
 8001486:	d4e1      	bmi.n	800144c <_fflush_r+0xc>
 8001488:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800148a:	f7ff fb8b 	bl	8000ba4 <__retarget_lock_release_recursive>
 800148e:	e7dd      	b.n	800144c <_fflush_r+0xc>

08001490 <__swhatbuf_r>:
 8001490:	b570      	push	{r4, r5, r6, lr}
 8001492:	460c      	mov	r4, r1
 8001494:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001498:	2900      	cmp	r1, #0
 800149a:	b096      	sub	sp, #88	@ 0x58
 800149c:	4615      	mov	r5, r2
 800149e:	461e      	mov	r6, r3
 80014a0:	da0d      	bge.n	80014be <__swhatbuf_r+0x2e>
 80014a2:	89a3      	ldrh	r3, [r4, #12]
 80014a4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80014a8:	f04f 0100 	mov.w	r1, #0
 80014ac:	bf14      	ite	ne
 80014ae:	2340      	movne	r3, #64	@ 0x40
 80014b0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80014b4:	2000      	movs	r0, #0
 80014b6:	6031      	str	r1, [r6, #0]
 80014b8:	602b      	str	r3, [r5, #0]
 80014ba:	b016      	add	sp, #88	@ 0x58
 80014bc:	bd70      	pop	{r4, r5, r6, pc}
 80014be:	466a      	mov	r2, sp
 80014c0:	f000 f848 	bl	8001554 <_fstat_r>
 80014c4:	2800      	cmp	r0, #0
 80014c6:	dbec      	blt.n	80014a2 <__swhatbuf_r+0x12>
 80014c8:	9901      	ldr	r1, [sp, #4]
 80014ca:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80014ce:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80014d2:	4259      	negs	r1, r3
 80014d4:	4159      	adcs	r1, r3
 80014d6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80014da:	e7eb      	b.n	80014b4 <__swhatbuf_r+0x24>

080014dc <__smakebuf_r>:
 80014dc:	898b      	ldrh	r3, [r1, #12]
 80014de:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80014e0:	079d      	lsls	r5, r3, #30
 80014e2:	4606      	mov	r6, r0
 80014e4:	460c      	mov	r4, r1
 80014e6:	d507      	bpl.n	80014f8 <__smakebuf_r+0x1c>
 80014e8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80014ec:	6023      	str	r3, [r4, #0]
 80014ee:	6123      	str	r3, [r4, #16]
 80014f0:	2301      	movs	r3, #1
 80014f2:	6163      	str	r3, [r4, #20]
 80014f4:	b003      	add	sp, #12
 80014f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014f8:	ab01      	add	r3, sp, #4
 80014fa:	466a      	mov	r2, sp
 80014fc:	f7ff ffc8 	bl	8001490 <__swhatbuf_r>
 8001500:	9f00      	ldr	r7, [sp, #0]
 8001502:	4605      	mov	r5, r0
 8001504:	4639      	mov	r1, r7
 8001506:	4630      	mov	r0, r6
 8001508:	f7ff fbba 	bl	8000c80 <_malloc_r>
 800150c:	b948      	cbnz	r0, 8001522 <__smakebuf_r+0x46>
 800150e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001512:	059a      	lsls	r2, r3, #22
 8001514:	d4ee      	bmi.n	80014f4 <__smakebuf_r+0x18>
 8001516:	f023 0303 	bic.w	r3, r3, #3
 800151a:	f043 0302 	orr.w	r3, r3, #2
 800151e:	81a3      	strh	r3, [r4, #12]
 8001520:	e7e2      	b.n	80014e8 <__smakebuf_r+0xc>
 8001522:	89a3      	ldrh	r3, [r4, #12]
 8001524:	6020      	str	r0, [r4, #0]
 8001526:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800152a:	81a3      	strh	r3, [r4, #12]
 800152c:	9b01      	ldr	r3, [sp, #4]
 800152e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001532:	b15b      	cbz	r3, 800154c <__smakebuf_r+0x70>
 8001534:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001538:	4630      	mov	r0, r6
 800153a:	f000 f81d 	bl	8001578 <_isatty_r>
 800153e:	b128      	cbz	r0, 800154c <__smakebuf_r+0x70>
 8001540:	89a3      	ldrh	r3, [r4, #12]
 8001542:	f023 0303 	bic.w	r3, r3, #3
 8001546:	f043 0301 	orr.w	r3, r3, #1
 800154a:	81a3      	strh	r3, [r4, #12]
 800154c:	89a3      	ldrh	r3, [r4, #12]
 800154e:	431d      	orrs	r5, r3
 8001550:	81a5      	strh	r5, [r4, #12]
 8001552:	e7cf      	b.n	80014f4 <__smakebuf_r+0x18>

08001554 <_fstat_r>:
 8001554:	b538      	push	{r3, r4, r5, lr}
 8001556:	4d07      	ldr	r5, [pc, #28]	@ (8001574 <_fstat_r+0x20>)
 8001558:	2300      	movs	r3, #0
 800155a:	4604      	mov	r4, r0
 800155c:	4608      	mov	r0, r1
 800155e:	4611      	mov	r1, r2
 8001560:	602b      	str	r3, [r5, #0]
 8001562:	f7fe ff36 	bl	80003d2 <_fstat>
 8001566:	1c43      	adds	r3, r0, #1
 8001568:	d102      	bne.n	8001570 <_fstat_r+0x1c>
 800156a:	682b      	ldr	r3, [r5, #0]
 800156c:	b103      	cbz	r3, 8001570 <_fstat_r+0x1c>
 800156e:	6023      	str	r3, [r4, #0]
 8001570:	bd38      	pop	{r3, r4, r5, pc}
 8001572:	bf00      	nop
 8001574:	200001b8 	.word	0x200001b8

08001578 <_isatty_r>:
 8001578:	b538      	push	{r3, r4, r5, lr}
 800157a:	4d06      	ldr	r5, [pc, #24]	@ (8001594 <_isatty_r+0x1c>)
 800157c:	2300      	movs	r3, #0
 800157e:	4604      	mov	r4, r0
 8001580:	4608      	mov	r0, r1
 8001582:	602b      	str	r3, [r5, #0]
 8001584:	f7fe ff35 	bl	80003f2 <_isatty>
 8001588:	1c43      	adds	r3, r0, #1
 800158a:	d102      	bne.n	8001592 <_isatty_r+0x1a>
 800158c:	682b      	ldr	r3, [r5, #0]
 800158e:	b103      	cbz	r3, 8001592 <_isatty_r+0x1a>
 8001590:	6023      	str	r3, [r4, #0]
 8001592:	bd38      	pop	{r3, r4, r5, pc}
 8001594:	200001b8 	.word	0x200001b8

08001598 <_sbrk_r>:
 8001598:	b538      	push	{r3, r4, r5, lr}
 800159a:	4d06      	ldr	r5, [pc, #24]	@ (80015b4 <_sbrk_r+0x1c>)
 800159c:	2300      	movs	r3, #0
 800159e:	4604      	mov	r4, r0
 80015a0:	4608      	mov	r0, r1
 80015a2:	602b      	str	r3, [r5, #0]
 80015a4:	f7fe ff3e 	bl	8000424 <_sbrk>
 80015a8:	1c43      	adds	r3, r0, #1
 80015aa:	d102      	bne.n	80015b2 <_sbrk_r+0x1a>
 80015ac:	682b      	ldr	r3, [r5, #0]
 80015ae:	b103      	cbz	r3, 80015b2 <_sbrk_r+0x1a>
 80015b0:	6023      	str	r3, [r4, #0]
 80015b2:	bd38      	pop	{r3, r4, r5, pc}
 80015b4:	200001b8 	.word	0x200001b8

080015b8 <_init>:
 80015b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ba:	bf00      	nop
 80015bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015be:	bc08      	pop	{r3}
 80015c0:	469e      	mov	lr, r3
 80015c2:	4770      	bx	lr

080015c4 <_fini>:
 80015c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015c6:	bf00      	nop
 80015c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015ca:	bc08      	pop	{r3}
 80015cc:	469e      	mov	lr, r3
 80015ce:	4770      	bx	lr
